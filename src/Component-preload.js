jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "sap/ui/demo/iconexplorer/Component-preload",
	"modules": {
		"sap/ui/demo/iconexplorer/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"sap/ui/demo/iconexplorer/model/models\",\n\t\"sap/ui/demo/iconexplorer/model/IconModel\",\n\t\"sap/ui/demo/iconexplorer/model/FavoriteModel\",\n\t\"sap/ui/demo/iconexplorer/controller/ErrorHandler\"\n], function (UIComponent, Device, models, IconModel, FavoriteModel, ErrorHandler) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"sap.ui.demo.iconexplorer.Component\", {\n\n\t\tmetadata : {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * In this function, the device models are set and the router is initialized.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit : function () {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// set up a helper model to manage favorite icons\n\t\t\tvar oFavoriteModel = new FavoriteModel();\n\t\t\tthis.setModel(oFavoriteModel, \"fav\");\n\n\t\t\t// set up an icon model that loads icons from the icon font\n\t\t\tvar oIconModel = new IconModel(this._oIconsLoadedPromise);\n\t\t\tthis.setModel(oIconModel);\n\n\t\t\t// We resolve the helper promise on component level when the promise in the icon model is resolved.\n\t\t\t// The app controller is instantiated before the components init method, so it cannot directly\n\t\t\t// register to the icon model.\n\t\t\toIconModel.iconsLoaded().then(function () {\n\t\t\t\tthis._fnIconsLoadedResolve();\n\t\t\t}.bind(this));\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\n\t\t\t// initialize the error handler with the component\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\n\t\t/**\n\t\t * Wrapper for the iconModel promise as the controller is instantiated earlier than the model\n\t\t * @return {Promise|*} the icons loaded promise\n\t\t */\n\t\ticonsLoaded: function () {\n\t\t\tif (!this._oIconsLoadedPromise) {\n\t\t\t\tthis._oIconsLoadedPromise = new Promise(function (fnResolve, fnReject) {\n\t\t\t\t\tthis._fnIconsLoadedResolve = fnResolve;\n\t\t\t\t\tthis._fnIconsLoadedReject = fnReject;\n\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t\treturn this._oIconsLoadedPromise;\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ErrorHandler is destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy : function () {\n\t\t\tthis._oErrorHandler.destroy();\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass : function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls\n\t\t\t\t\t// but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\n\t});\n\n});",
		"sap/ui/demo/iconexplorer/controller/App.controller.js": "sap.ui.define([\n\t\t\"sap/ui/demo/iconexplorer/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (BaseController, JSONModel) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"sap.ui.demo.iconexplorer.controller.App\", {\n\n\t\t\t/**\n\t\t\t * Called when the app is started.\n\t\t\t */\n\t\t\tonInit : function () {\n\t\t\t\tvar oViewModel,\n\t\t\t\t\tfnSetAppNotBusy,\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\t\t\t\tthis.setModel(oViewModel, \"view\");\n\n\t\t\t\t// reduce the log level to speed up the app performance\n\t\t\t\tjQuery.sap.log.setLevel(jQuery.sap.log.Level.WARNING);\n\n\t\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t};\n\n\t\t\t\t// ensure that the app is busy until the icon meta data is loaded\n\t\t\t\tthis.getOwnerComponent().iconsLoaded().then(fnSetAppNotBusy);\n\n\t\t\t\t// apply content density mode to root view\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\t\t});\n\n\t}\n);",
		"sap/ui/demo/iconexplorer/controller/BaseController.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\"\n\t], function (Controller) {\n\t\t\"use strict\";\n\n\t\treturn Controller.extend(\"sap.ui.demo.iconexplorer.controller.BaseController\", {\n\t\t\t/**\n\t\t\t * Convenience method for accessing the router.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t\t */\n\t\t\tgetRouter : function () {\n\t\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the view model by name.\n\t\t\t * @public\n\t\t\t * @param {string} [sName] the model name\n\t\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t\t */\n\t\t\tgetModel : function (sName) {\n\t\t\t\treturn this.getView().getModel(sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for setting the view model.\n\t\t\t * @public\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t\t */\n\t\t\tsetModel : function (oModel, sName) {\n\t\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Getter for the resource bundle.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t\t */\n\t\t\tgetResourceBundle : function () {\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"sap/ui/demo/iconexplorer/controller/ErrorHandler.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/m/MessageBox\"\n\t], function (UI5Object, MessageBox) {\n\t\t\"use strict\";\n\n\t\treturn UI5Object.extend(\"sap.ui.demo.iconexplorer.controller.ErrorHandler\", {\n\n\t\t\t/**\n\t\t\t * Handles application errors by automatically attaching to the model events\n\t\t\t * and displaying errors when needed.\n\t\t\t * @class\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t\t * @public\n\t\t\t * @alias sap.ui.demo.iconexplorer.controller.ErrorHandler\n\t\t\t */\n\t\t\tconstructor : function (oComponent) {\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\t\tthis._oComponent = oComponent;\n\t\t\t\tthis._oModel = oComponent.getModel();\n\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t\t * Only the first error message will be displayed.\n\t\t\t * @param {*} vDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showServiceError : function (vDetails) {\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails: vDetails,\n\t\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose: function () {\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n);",
		"sap/ui/demo/iconexplorer/controller/NotFound.controller.js": "sap.ui.define([\n\t\t\"sap/ui/demo/iconexplorer/controller/BaseController\"\n\t], function (BaseController) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"sap.ui.demo.iconexplorer.controller.NotFound\", {\n\n\t\t\t/**\n\t\t\t * Navigates to the worklist when the link is pressed\n\t\t\t * @public\n\t\t\t */\n\t\t\tonLinkPressed : function () {\n\t\t\t\tthis.getRouter().navTo(\"overview\");\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"sap/ui/demo/iconexplorer/controller/Overview.controller.js": "sap.ui.define([\n\t\"sap/ui/demo/iconexplorer/controller/BaseController\",\n\t\"sap/ui/core/IconPool\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/demo/iconexplorer/model/formatter\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/ui/Device\",\n\t\"sap/m/MessageToast\",\n\t\"sap/m/Label\",\n\t\"sap/m/ToggleButton\",\n\t\"jquery.sap.global\"\n], function (BaseController, IconPool, JSONModel, formatter, Filter, FilterOperator, Device, MessageToast, Label, ToggleButton, $) {\n\t\"use strict\";\n\n\tvar TYPING_DELAY = 200; // ms\n\n\treturn BaseController.extend(\"sap.ui.demo.iconexplorer.controller.Overview\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the overview controller is instantiated.\n\t\t * @public\n\t\t */\n\t\tonInit : function () {\n\t\t\tvar oViewModel,\n\t\t\t\toTagModel;\n\n\t\t\tthis._oPreviousQueryContext = {};\n\t\t\tthis._oCurrentQueryContext = null;\n\n\t\t\t// model used to manipulate control states\n\t\t\toViewModel = new JSONModel({\n\t\t\t\tgrowingThreshold : 50,\n\t\t\t\ticonFilterCount: this.getResourceBundle().getText(\"overviewTabAllInitial\"),\n\t\t\t\toverviewNoDataText : this.getResourceBundle().getText(\"overviewNoDataText\")\n\t\t\t});\n\t\t\tthis.setModel(oViewModel, \"view\");\n\n\t\t\t// helper model for managing the tag selection\n\t\t\toTagModel = new JSONModel();\n\t\t\tthis.setModel(oTagModel, \"tags\");\n\n\t\t\tthis.getRouter().getRoute(\"overview\").attachPatternMatched(this._updateUI, this);\n\t\t},\n\n\t\t/**\n\t\t * Focus search field after rendering for immediate searchability\n\t\t */\n\t\tonAfterRendering: function () {\n\t\t\tsetTimeout(function () {\n\t\t\t\tthis.byId(\"searchField\").focus();\n\t\t\t}.bind(this),0);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler for navigating back.\n\t\t * We navigate back in the browser history\n\t\t * @public\n\t\t */\n\t\tonNavBack : function() {\n\t\t\thistory.go(-1);\n\t\t},\n\n\t\t/**\n\t\t * Triggered by the table's 'updateFinished' event and by the other tabs change: after new table\n\t\t * data is available, this handler method updates the icon counter.\n\t\t * @public\n\t\t */\n\t\tonUpdateFinished : function () {\n\t\t\tfunction getRootControl(oEvent) {\n\t\t\t\treturn oEvent.srcControl.getMetadata().getName().search(\"VerticalLayout\") >= 0 ? oEvent.srcControl : oEvent.srcControl.getParent();\n\t\t\t}\n\n\t\t\t// show total count of items\n\t\t\tthis.getModel(\"view\").setProperty(\"/iconFilterCount\", this.byId(\"results\").getBinding(this._sAggregationName).getLength());\n\t\t\t// register press callback for grid and visual mode\n\t\t\tif (this._oCurrentQueryContext.tab === \"grid\" || this._oCurrentQueryContext.tab === \"visual\") {\n\t\t\t\tif (!this._oPressLayoutCellDelegate) {\n\t\t\t\t\tthis._oPressLayoutCellDelegate = {\n\t\t\t\t\t\t// tap: set selected and hoverable class\n\t\t\t\t\t\tontap: function (oEvent) {\n\t\t\t\t\t\t\tvar oBindingContext = oEvent.srcControl.getBindingContext();\n\t\t\t\t\t\t\tvar oRoot = getRootControl(oEvent);\n\n\t\t\t\t\t\t\t// prevent setting styles on the favorite button\n\t\t\t\t\t\t\tif (oRoot.getMetadata().getName().search(\"ToggleButton\") >= 0 || oEvent.srcControl.getMetadata().getName().search(\"ToggleButton\") >= 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// reset previoulsy pressed item and store current item\n\t\t\t\t\t\t\tif (this._oPreviouslySelectedLayoutCell) {\n\t\t\t\t\t\t\t\tthis._oPreviouslySelectedLayoutCell.removeStyleClass(\"sapMLIBSelected\");\n\t\t\t\t\t\t\t\tthis._oPreviouslySelectedLayoutCell.removeStyleClass(\"sapMLIBHoverable\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// set the LIB styles on the current cell\n\t\t\t\t\t\t\toRoot.addStyleClass(\"sapMLIBSelected\");\n\n\t\t\t\t\t\t\tthis._oPreviouslySelectedLayoutCell = oRoot;\n\t\t\t\t\t\t\toRoot.addStyleClass(\"sapMLIBHoverable\");\n\n\t\t\t\t\t\t\t// select the icon\n\t\t\t\t\t\t\tthis._updateHash(\"icon\", oBindingContext.getProperty(\"name\"));\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t// touchstart: set item active and remove hoverable class, invert icon color\n\t\t\t\t\t\tontouchstart: function (oEvent) {\n\t\t\t\t\t\t\tvar oRoot = getRootControl(oEvent);\n\n\t\t\t\t\t\t\toRoot.addStyleClass(\"sapMLIBActive\");\n\t\t\t\t\t\t\toRoot.removeStyleClass(\"sapMLIBHoverable\");\n\t\t\t\t\t\t\tif (!this._sNormalIconColor) {\n\t\t\t\t\t\t\t\tthis._sNormalIconColor = oRoot.$().find(\".sapUiIcon\").control(0).getColor();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toRoot.$().find(\".sapUiVltCell > .sapUiIcon\").control().forEach(function (oIcon) {\n\t\t\t\t\t\t\t\toIcon.setColor(sap.ui.core.theming.Parameters.get(\"sapUiTextInverted\"));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t// touchend: remove active class, reset icon color\n\t\t\t\t\t\tontouchend: function (oEvent) {\n\t\t\t\t\t\t\tvar oRoot = getRootControl(oEvent);\n\n\t\t\t\t\t\t\toRoot.removeStyleClass(\"sapMLIBActive\");\n\t\t\t\t\t\t\toRoot.$().find(\".sapUiVltCell > .sapUiIcon\").control().forEach(function (oIcon) {\n\t\t\t\t\t\t\t\toIcon.setColor(this._sNormalIconColor);\n\t\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// there is no addEventDelegateOnce so we remove and add it for all items\n\t\t\t\tthis.byId(\"results\").getAggregation(this._sAggregationName).forEach(function (oItem) {\n\t\t\t\t\toItem.removeEventDelegate(this._oPressLayoutCellDelegate);\n\t\t\t\t\toItem.addEventDelegate(this._oPressLayoutCellDelegate);\n\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler when a table item gets pressed\n\t\t * @param {sap.ui.base.Event} oEvent the table selectionChange event\n\t\t * @public\n\t\t */\n\t\tonSelectionChange : function (oEvent) {\n\t\t\tvar sModelName = (this._oCurrentQueryContext.tab === \"favorites\" ? \"fav\" : undefined),\n\t\t\t\toItem = oEvent.getParameter(\"listItem\");\n\n\t\t\tthis._updateHash(\"icon\", oItem.getBindingContext(sModelName).getProperty(\"name\"));\n\t\t},\n\n\t\t/**\n\t\t * Event handler for changing the icon browse mode.\n\t\t * We update the hash in case a new tab is selected.\n\t\t * @param {sap.ui.base.Event} oEvent the tabSelect event of the IconTabBar\n\t\t */\n\t\tonTabSelect : function (oEvent){\n\t\t\tif (oEvent.getParameter(\"selectedKey\") === \"all\") {\n\t\t\t\tthis._updateHash(\"reset\", \"all\");\n\t\t\t} else {\n\t\t\t\tthis._updateHash(\"tab\", oEvent.getParameter(\"selectedKey\"));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Searches the icons and filters the bindings accordingly\n\t\t * @param {sap.ui.base.Event} oEvent the liveChange event of the SearchField\n\t\t * @public\n\t\t */\n\t\tonSearch: function (oEvent) {\n\t\t\tthis._updateHash(\"search\", oEvent.getParameter(\"newValue\"));\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the category selection\n\t\t * @param {sap.ui.base.Event} oEvent the selectionChange event\n\t\t */\n\t\tonSelectCategory : function (oEvent) {\n\t\t\tthis._updateHash(\"cat\", (oEvent.getParameter(\"selectedItem\") ? oEvent.getParameter(\"selectedItem\").getKey() : undefined));\n\t\t},\n\n\t\t/**\n\t\t * Searches the icons for a single tag only and filters the bindings accordingly\n\t\t * @param {sap.ui.base.Event} oEvent the liveChange event of the SearchField\n\t\t * @public\n\t\t */\n\t\tonTagSelect: function (oEvent) {\n\t\t\tthis._updateHash(\"tag\", oEvent.getParameter(\"pressed\") === false ? \"\" : oEvent.getSource().getText());\n\t\t},\n\n\t\t/**\n\t\t * Toggles the favorite state of an icon when the user presses on the favorite button\n\t\t * @param {sap.ui.base.Event} oEvent the press event of the ToggleButton\n\t\t * @public\n\t\t */\n\t\tonToggleFavorite: function (oEvent) {\n\t\t\tvar sModelName = (this._oCurrentQueryContext.tab === \"favorites\" ? \"fav\" : undefined),\n\t\t\t\toBindingContext = oEvent.getSource().getBindingContext(sModelName),\n\t\t\t\tsName = oBindingContext.getProperty(\"name\"),\n\t\t\t\toResourceBundle = this.getResourceBundle();\n\n\t\t\tif (this.getModel(\"fav\").toggleFavorite(oBindingContext)) {\n\t\t\t\tMessageToast.show(oResourceBundle.getText(\"overviewFavoriteAdd\", [sName]));\n\t\t\t} else {\n\t\t\t\tMessageToast.show(oResourceBundle.getText(\"overviewFavoriteRemove\", [sName]));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Switches between code and icon copy mode\n\t\t * @param {sap.ui.base.Event} oEvent the select event of the RadioButtonGroup\n\t\t */\n\t\tonCopySelect: function (oEvent) {\n\t\t\tvar iIndex = oEvent.getParameter(\"selectedIndex\");\n\n\t\t\tif (iIndex === 0) {\n\t\t\t\tthis.byId(\"previewCopy\").getContent()[0].setVisible(true);\n\t\t\t\tthis.byId(\"previewCopy\").getContent()[1].setVisible(false);\n\t\t\t} else {\n\t\t\t\tthis.byId(\"previewCopy\").getContent()[1].setVisible(true);\n\t\t\t\tthis.byId(\"previewCopy\").getContent()[0].setVisible(false);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Copies the value of the code input field to the clipboard and display a message\n\t\t */\n\t\tonCopyCodeToClipboard: function () {\n\t\t\tvar sString = this.byId(\"previewCopyCode\").getValue(),\n\t\t\t\t$temp = $(\"<input>\"),\n\t\t\t\toResourceBundle = this.getResourceBundle();\n\n\t\t\ttry {\n\t\t\t\t$(\"body\").append($temp);\n\t\t\t\t$temp.val(sString).select();\n\t\t\t\tdocument.execCommand(\"copy\");\n\t\t\t\t$temp.remove();\n\n\t\t\t\tMessageToast.show(oResourceBundle.getText(\"previewCopyToClipboardSuccess\", [sString]));\n\t\t\t} catch (oException) {\n\t\t\t\tMessageToast.show(oResourceBundle.getText(\"previewCopyToClipboardFail\", [sString]));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Copies the value of the code input field to the clipboard and display a message\n\t\t */\n\t\tonCopyIconToClipboard: function () {\n\t\t\tvar sString = this.byId(\"previewCopyCode\").getValue();\n\t\t\tvar sIcon = this.getModel().getUnicode(sString);\n\t\t\tvar $temp = $(\"<input>\");\n\n\t\t\ttry {\n\t\t\t\t$(\"body\").append($temp);\n\t\t\t\t$temp.val(sIcon).select();\n\t\t\t\tdocument.execCommand(\"copy\");\n\t\t\t\t$temp.remove();\n\n\t\t\t\tMessageToast.show(\"Icon \\\"\" + sString + \"\\\" has been copied to clipboard\");\n\t\t\t} catch (oException) {\n\t\t\t\tMessageToast.show(\"Icon \\\"\" + sString + \"\\\" could not be copied to clipboard\");\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shows a random icon in the preview pane\n\t\t * @public\n\t\t */\n\t\tonSurpriseMe: function () {\n\t\t\tvar aIcons = this.getModel().getProperty(\"/groups/0/icons\"),\n\t\t\t\toRandomItem = aIcons[Math.floor(Math.random() * aIcons.length)];\n\n\t\t\tthis._updateHash(\"icon\", oRandomItem.name);\n\t\t},\n\n\t\t/**\n\t\t * Closes the preview pane\n\t\t * @public\n\t\t */\n\t\tonClosePreview: function () {\n\t\t\tthis._updateHash(\"icon\");\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* internal methods                                            */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Shows the selected item on the object page\n\t\t * On phones a additional history entry is created\n\t\t * @param {string} sIcon the icon name to be previewed\n\t\t * @private\n\t\t */\n\t\t_previewIcon : function (sIcon) {\n\t\t\tthis.getModel().iconsLoaded().then(function () {\n\t\t\t\t// bind the preview to the item path\n\t\t\t\tthis.byId(\"preview\").bindElement({\n\t\t\t\t\tpath: this.getModel().getIconPath(sIcon)\n\t\t\t\t});\n\n\t\t\t\tvar sIconSymbol = this.getModel().getUnicodeHTML(sIcon);\n\t\t\t\tthis.byId(\"previewCopyIcon\").setHtmlText(\"<span>\" + sIconSymbol + \"</span>\" + sIcon);\n\n\t\t\t\t// update the group information with a timeout as this task takes some time to calculate\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tvar aGroups = this.getModel().getIconGroups(sIcon);\n\t\t\t\t\tthis.byId(\"categoryInfo\").setText(aGroups.join(\", \"));\n\t\t\t\t}.bind(this),0);\n\n\t\t\t\t// update unicode info\n\t\t\t\tthis.byId(\"unicodeInfo\").setText(this.getModel().getUnicodeHTML(sIcon));\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Updates the UI according to the hash\n\t\t * @param {sap.ui.base.Event} oEvent the routing event\n\t\t * @private\n\t\t */\n\t\t_updateUI: function (oEvent) {\n\t\t\tvar oQuery = oEvent.getParameter(\"arguments\")[\"?query\"],\n\t\t\t\tbInitial = false;\n\n\t\t\t// set a default query object in case no has is defined\n\t\t\tif (!oQuery) {\n\t\t\t\toQuery = {\n\t\t\t\t\ttab: \"grid\"\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// keep the previous item if all tab (remove filters) has been pressed\n\t\t\tif (oQuery.tab === \"all\") {\n\t\t\t\toQuery.tab = this._oPreviousQueryContext.tab;\n\t\t\t}\n\n\t\t\t// check tab value against a whitelist\n\t\t\tvar aValidKeys = [\"details\", \"grid\", \"visual\", \"favorites\"];\n\t\t\tif (aValidKeys.indexOf(oQuery.tab) < 0) {\n\t\t\t\toQuery.tab = \"grid\";\n\t\t\t}\n\n\t\t\t// store current context\n\t\t\tif (!this._oCurrentQueryContext) {\n\t\t\t\tbInitial = true;\n\t\t\t}\n\t\t\tthis._oCurrentQueryContext = oQuery;\n\n\t\t\t// helper variables for updating the UI pieces\n\t\t\tvar bTabularResults = !!(oQuery.tab === \"details\" || oQuery.tab === \"favorites\");\n\t\t\tvar bTabChanged = this._oPreviousQueryContext.tab !== oQuery.tab;\n\t\t\tvar bCategoryChanged = this._oPreviousQueryContext.cat !== oQuery.cat;\n\t\t\tvar bSearchChanged = this._oPreviousQueryContext.search !== oQuery.search;\n\t\t\tvar bTagChanged = this._oPreviousQueryContext.tag !== oQuery.tag;\n\t\t\tvar bIconChanged = this._oPreviousQueryContext.icon !== oQuery.icon;\n\n\t\t\tthis._sAggregationName = (bTabularResults  ? \"items\" : \"content\");\n\n\t\t\tthis.getOwnerComponent().iconsLoaded().then(function () {\n\t\t\t\t// tab\n\t\t\t\tthis._toggleScrollToLoad(!bTabularResults);\n\t\t\t\tthis.byId(\"iconTabBar\").setSelectedKey(oQuery.tab);\n\t\t\t\tif (bTabChanged) {\n\t\t\t\t\tvar oContent = this.byId(\"resultContainer\").getContent();\n\n\t\t\t\t\t// destroy last content item (1 is the search bar and 2 is the tags bar)\n\t\t\t\t\tif (oContent.length === 3) {\n\t\t\t\t\t\toContent.pop().destroy();\n\t\t\t\t\t}\n\t\t\t\t\t// uppercase first letter\n\t\t\t\t\tvar sFragmentName = formatter.uppercaseFirstLetter(oQuery.tab);\n\n\t\t\t\t\t// add new content to the end of result container\n\t\t\t\t\tvar oResultsFragment = sap.ui.xmlfragment(\n\t\t\t\t\t\tthis.getView().getId(),\n\t\t\t\t\t\t\"sap.ui.demo.iconexplorer.view.browse.\" + sFragmentName, this);\n\t\t\t\t\tthis.byId(\"resultContainer\").addContent(oResultsFragment);\n\n\t\t\t\t\tvar bCategoriesVisible = !(Device.system.phone || oQuery.tab == \"favorites\");\n\t\t\t\t\tthis.byId(\"categorySelection\").setVisible(bCategoriesVisible);\n\t\t\t\t}\n\n\t\t\t\t// icon\n\t\t\t\tif (oQuery.icon && bIconChanged) {\n\t\t\t\t\tthis._previewIcon(oQuery.icon);\n\t\t\t\t\tthis.byId(\"preview\").setVisible(true);\n\t\t\t\t\tif (this.byId(\"preview\").getLayoutData().getSize() === \"0px\") {\n\t\t\t\t\t\tthis.byId(\"preview\").getLayoutData().setSize(\"350px\");\n\t\t\t\t\t}\n\t\t\t\t} else if (!oQuery.icon) {\n\t\t\t\t\tif (bInitial) {\n\t\t\t\t\t\tthis._previewIcon(\"sap-ui5\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.byId(\"preview\").setVisible(false);\n\t\t\t\t\tthis.byId(\"preview\").getLayoutData().setSize(\"0px\");\n\t\t\t\t}\n\n\t\t\t\t// category\n\t\t\t\tthis.byId(\"categorySelection\").setSelectedKey(oQuery.cat);\n\t\t\t\tif ((oQuery.cat || bCategoryChanged) && oQuery.tab !== \"favorites\") {\n\t\t\t\t\tif (bInitial || bTabChanged) {\n\t\t\t\t\t\tthis._selectCategory(oQuery);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearTimeout(this._iCategorySelectionTimeout);\n\t\t\t\t\t\tthis._iCategorySelectionTimeout = setTimeout(function () {\n\t\t\t\t\t\t\tthis._selectCategory(oQuery);\n\t\t\t\t\t\t}.bind(this), TYPING_DELAY);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// search & tags\n\t\t\t\tthis.byId(\"searchField\").setValue(oQuery.search);\n\t\t\t\tif (bInitial || bSearchChanged || bTagChanged || bTabChanged) {\n\t\t\t\t\t// search\n\t\t\t\t\tif (bInitial || bTabChanged) {\n\t\t\t\t\t\tif (oQuery.search || bTabChanged) {\n\t\t\t\t\t\t\tthis._searchIcons(oQuery.search, oQuery.tag);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearTimeout(this._iSearchTimeout);\n\t\t\t\t\t\tthis._iSearchTimeout = setTimeout(function () {\n\t\t\t\t\t\t\tthis._searchIcons(oQuery.search, oQuery.tag);\n\t\t\t\t\t\t}.bind(this), TYPING_DELAY);\n\t\t\t\t\t}\n\n\t\t\t\t\t// tags\n\t\t\t\t\tif (bInitial || bTabChanged) {\n\t\t\t\t\t\tif (oQuery.tab === \"favorites\") {\n\t\t\t\t\t\t\tthis._aCategoryTags = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._updateTags(oQuery);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclearTimeout(this._iTagTimeout);\n\t\t\t\t\t\tthis._iTagTimeout = setTimeout(function () {\n\t\t\t\t\t\t\tthis._updateTags(oQuery);\n\t\t\t\t\t\t}.bind(this), TYPING_DELAY);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Updates the hash with the current UI state\n\t\t * @param {string} [sKey] the key of the query to be updated\n\t\t * @param {string} [sValue] the value of the query to be updated\n\t\t * @private\n\t\t */\n\t\t_updateHash: function (sKey, sValue) {\n\t\t\tvar oQuery = {};\n\n\t\t\t// deep copy of the context\n\t\t\tif (this._oCurrentQueryContext.tab) {\n\t\t\t\toQuery.tab = this._oCurrentQueryContext.tab;\n\t\t\t}\n\t\t\tif (this._oCurrentQueryContext.icon) {\n\t\t\t\toQuery.icon = this._oCurrentQueryContext.icon;\n\t\t\t}\n\t\t\tif (this._oCurrentQueryContext.search) {\n\t\t\t\toQuery.search = this._oCurrentQueryContext.search;\n\t\t\t}\n\t\t\tif (this._oCurrentQueryContext.cat) {\n\t\t\t\toQuery.cat = this._oCurrentQueryContext.cat;\n\t\t\t}\n\t\t\tif (this._oCurrentQueryContext.tag) {\n\t\t\t\toQuery.tag = this._oCurrentQueryContext.tag;\n\t\t\t}\n\n\t\t\t// explicit reset for tags and search when the all item was pressed\n\t\t\tif (sKey === \"reset\") {\n\t\t\t\tdelete oQuery.tag;\n\t\t\t\tdelete oQuery.search;\n\t\t\t\tdelete oQuery.cat;\n\t\t\t} else {\n\t\t\t\t// override the key value pair passed in as parameters\n\t\t\t\tif (sKey && sValue) {\n\t\t\t\t\toQuery[sKey] = sValue;\n\t\t\t\t}\n\n\t\t\t\t// reset tags under the following conditions\n\t\t\t\t// - navigating from or to favorite tab\n\t\t\t\t// - category was changed\n\t\t\t\t// - emtpy tag value\n\t\t\t\tif (this._oCurrentQueryContext.tab !== oQuery.tab  && (this._oCurrentQueryContext.tab === \"favorites\" || oQuery.tab === \"favorites\") ||\n\t\t\t\t\tthis._oCurrentQueryContext.cat !== oQuery.cat ||\n\t\t\t\t\tsKey === \"tag\" && !sValue) {\n\t\t\t\t\tdelete oQuery.tag;\n\t\t\t\t}\n\n\t\t\t\t// reset search if no value has been passed\n\t\t\t\tif (sKey === \"search\" && !sValue) {\n\t\t\t\t\tdelete oQuery.search;\n\t\t\t\t}\n\n\t\t\t\t// reset icon if no value has been passed\n\t\t\t\tif (sKey === \"icon\" && !sValue) {\n\t\t\t\t\tdelete oQuery.icon;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// call route with query parameter\n\t\t\tthis.getRouter().navTo(\"overview\", {\n\t\t\t\tquery: oQuery\n\t\t\t});\n\n\t\t\t// store previous context\n\t\t\tthis._oPreviousQueryContext = this._oCurrentQueryContext;\n\t\t\t// store the new context\n\t\t\tthis._oCurrentQueryContext = oQuery;\n\t\t},\n\n\t\t/**\n\t\t * Does the real search after a short delay to improve the perceived performance of the app\n\t\t * The following search modes can apply depending on the parameter values\n\t\t * - search, no tag: reset the filters\n\t\t * - search, no tag: search for the string in the name OR the tags of the icons\n\t\t * - no search, tag: search for the tag in the tags of the icons\n\t\t * - search, tag: search for the tag in the tags of the icons AND search for the string in the name OR the tags of the icons\n\t\t * @param {string} sSearchValue the search string\n\t\t * @param {string} sTagValue the tag string\n\t\t * @private\n\t\t */\n\t\t_searchIcons : function (sSearchValue, sTagValue) {\n\t\t\tif (sSearchValue || sTagValue) {\n\t\t\t\t// only initialize the filters if needed to save some time\n\t\t\t\tvar aFilters = [],\n\t\t\t\t\toFilterTags = (sTagValue ? new Filter(\"tagString\", FilterOperator.Contains, sTagValue) : undefined),\n\t\t\t\t\toFilterSearchName = (sSearchValue ? new Filter(\"name\", FilterOperator.Contains, sSearchValue) : undefined),\n\t\t\t\t\toFilterSearchTags = (sSearchValue ? new Filter(\"tagString\", FilterOperator.Contains, sSearchValue) : undefined),\n\t\t\t\t\toFilterSearchNameTags = (sSearchValue ? new Filter({\n\t\t\t\t\t\tfilters: [oFilterSearchTags, oFilterSearchName],\n\t\t\t\t\t\tand: false\n\t\t\t\t\t}) : undefined);\n\n\t\t\t\t// search for name\n\t\t\t\tif (sSearchValue) {\n\t\t\t\t\taFilters.push(oFilterSearchNameTags);\n\t\t\t\t}\n\t\t\t\t// search for tags\n\t\t\t\tif (sTagValue) {\n\t\t\t\t\taFilters.push(oFilterTags);\n\t\t\t\t}\n\t\t\t\tif (aFilters.length <= 1) {\n\t\t\t\t\t// search or tag: just take the filter\n\t\t\t\t\tthis._vFilterSearch = aFilters;\n\t\t\t\t} else {\n\t\t\t\t\t// search and tag: tags contain the tag value and search for name or tags\n\t\t\t\t\tthis._vFilterSearch = [new Filter({\n\t\t\t\t\t\tfilters: aFilters,\n\t\t\t\t\t\tand: true\n\t\t\t\t\t})];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// reset search\n\t\t\t\tthis._vFilterSearch = [];\n\t\t\t}\n\n\t\t\t// filter icon list\n\t\t\tvar oResultBinding = this.byId(\"results\").getBinding(this._sAggregationName);\n\t\t\tif (oResultBinding !== undefined) {\n\t\t\t\toResultBinding.filter(this._vFilterSearch);\n\t\t\t\tthis.getModel(\"view\").setProperty(\"/overviewNoDataText\", this.getResourceBundle().getText(\"overviewNoDataWithSearchText\"));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the category selection\n\t\t * @param {object} oQuery the query object from the routing event\n\t\t * @private\n\t\t */\n\t\t_selectCategory: function (oQuery) {\n\t\t\tvar sGroupPath = this.getModel().getGroupPath(oQuery.cat);\n\n\t\t\t// rebind the result set to the current group\n\t\t\tthis.byId(\"results\").bindAggregation(this._sAggregationName, {\n\t\t\t\tpath: sGroupPath + \"/icons\",\n\t\t\t\tlength: this.getModel(\"view\").getProperty(\"/growingThreshold\"),\n\t\t\t\ttemplate: this.byId(\"results\").getBindingInfo(this._sAggregationName).template,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this.onUpdateFinished.bind(this)\n\t\t\t\t}\n\t\t\t});\n\t\t\t// apply filters\n\t\t\tthis.byId(\"results\").getBinding(this._sAggregationName).filter(this._vFilterSearch);\n\t\t\t// update tags\n\t\t\tthis._aCategoryTags = this.getModel().getProperty(sGroupPath + \"/tags\");\n\t\t\t// update tag bar directly with all tags of this category when no search or tag is selected\n\t\t\tif (!oQuery.tag && !oQuery.search) {\n\t\t\t\tthis._updateTagSelectionBar(this._aCategoryTags);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * updates the tags to the currently available binding contexts\n\t\t * @param {Object} oQuery the current query state\n\t\t * @private\n\t\t */\n\t\t_updateTags: function (oQuery) {\n\t\t\t// caution: it is really important to use getCurrentContexts and not getContexts here as the later modifies the binding\n\t\t\tvar aContexts = this.byId(\"results\").getBinding(this._sAggregationName).getCurrentContexts(),\n\t\t\t\taAllTags = [],\n\t\t\t\taCurrentTags = [],\n\t\t\t\tbTagVisible = false,\n\t\t\t\ti;\n\n\t\t\t// collect all current tags from the result list\n\t\t\tfor (i = 0; i < aContexts.length; i++) {\n\t\t\t\taAllTags = aAllTags.concat(aContexts[i].getProperty(\"tags\").map(function(oItem) { return oItem.name; }));\n\t\t\t}\n\n\t\t\t// no category selected yet: use all tags\n\t\t\tif (!this._aCategoryTags) {\n\t\t\t\tthis._aCategoryTags = this.getModel().getProperty(\"/groups/0/tags\");\n\t\t\t}\n\n\t\t\t// filter tags to the currently visible\n\t\t\tfor (i = 0; i < this._aCategoryTags.length; i++) {\n\t\t\t\tif (aAllTags.indexOf(this._aCategoryTags[i].name) >= 0) {\n\t\t\t\t\tthis._aCategoryTags[i].pressed = (this._aCategoryTags[i].name === oQuery.tag);\n\t\t\t\t\tif (this._aCategoryTags[i].pressed) {\n\t\t\t\t\t\tbTagVisible = true;\n\t\t\t\t\t}\n\t\t\t\t\taCurrentTags.push(this._aCategoryTags[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add current tag if it is not visible yet (tag bar only contains the top [x] tags)\n\t\t\tif (oQuery.tag && !bTagVisible) {\n\t\t\t\taCurrentTags.push({\n\t\t\t\t\tpressed : true,\n\t\t\t\t\tname : oQuery.tag\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update model data and bind the tags\n\t\t\tthis._updateTagSelectionBar(aCurrentTags);\n\t\t},\n\n\t\t/**\n\t\t * Binds tags to the tag selection bar and appends a label\n\t\t * @param {object[]} aTags the tags to be bound\n\t\t * @private\n\t\t */\n\t\t_updateTagSelectionBar: function (aTags) {\n\t\t\tthis.getModel(\"tags\").setData([{\"name\" : \"\"}].concat(aTags));\n\t\t\tthis.byId(\"tagSelection\").bindAggregation(\"content\", {\n\t\t\t\tpath: \"tags>/\",\n\t\t\t\tlength: 51,\n\t\t\t\tfactory: this._tagSelectionFactory.bind(this)\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Factory function for filling the tag bar.\n\t\t * First item is a label, then the tags are listed\n\t\t * @param {string} sId the id for the control to be created\n\t\t * @param {sap.ui.model.Context} oContext the binding context for the control to be created\n\t\t * @return {sap.m.Label|sap.m.ToggleButton} the control for the toolbar\n\t\t * @private\n\t\t */\n\t\t_tagSelectionFactory: function (sId, oContext) {\n\t\t\tif (oContext.getProperty(\"name\") === \"\") {\n\t\t\t\treturn new Label(sId, {\n\t\t\t\t\ttext: \"{i18n>overviewTagSelectionLabel}\",\n\t\t\t\t\ttooltip: \"{i18n>overviewSelectTagsTooltip}\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn new ToggleButton(sId, {\n\t\t\t\t\ttext: \"{tags>name}\",\n\t\t\t\t\tpressed: \"{tags>pressed}\",\n\t\t\t\t\tpress: [this.onTagSelect, this]\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Enables/Disables scroll to load functionality for the grid and visual view\n\t\t * @param {boolean} bToggle whether to enable or disable scroll to load\n\t\t * @private\n\t\t */\n\t\t_toggleScrollToLoad: function (bToggle) {\n\t\t\tvar oScrollContainer = this.byId(\"resultContainer\");\n\n\t\t\t// hack: we side-step all the scrolling complexity and attach growing-list-style to the ScrollEnablement callback directly\n\t\t\tif (!oScrollContainer._oScroller) { // not initialize yet\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (bToggle) {\n\t\t\t\tif (!this._fnInjectedScrollToLoadCallback) {\n\t\t\t\t\tthis._fnInjectedScrollToLoadCallback = function () {\n\t\t\t\t\t\tthis._loadMoreIcons();\n\t\t\t\t\t\tif (this._fnScrollLoadCallback && (this._oCurrentQueryContext.tab === \"details\" || this._oCurrentQueryContext.tab === \"favorites\")) {\n\t\t\t\t\t\t\tthis._fnScrollLoadCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this);\n\t\t\t\t}\n\n\t\t\t\t// store initial callback once\n\t\t\t\tif (!this._fnScrollLoadCallback && oScrollContainer._oScroller._fnScrollLoadCallback !== this._fnInjectedScrollToLoadCallback) {\n\t\t\t\t\tthis._fnScrollLoadCallback = oScrollContainer._oScroller._fnScrollLoadCallback;\n\t\t\t\t}\n\n\t\t\t\t// hook in our callback\n\t\t\t\toScrollContainer._oScroller._fnScrollLoadCallback = this._fnInjectedScrollToLoadCallback;\n\t\t\t} else {\n\t\t\t\t// reset initial callback\n\t\t\t\toScrollContainer._oScroller._fnScrollLoadCallback = this._fnScrollLoadCallback;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Loads [growingThreshold] more icons when scrolling down in the grid or visual tab\n\t\t * @private\n\t\t */\n\t\t_loadMoreIcons: function () {\n\t\t\tvar oBindingInfo = this.byId(\"results\").getBindingInfo(this._sAggregationName),\n\t\t\t\tiOldLength = parseInt(oBindingInfo.length, 10),\n\t\t\t\tiTotalLength = this.byId(\"results\").getBinding(\"content\").getLength();\n\n\t\t\t// exit condition\n\t\t\tif (iOldLength >= iTotalLength) {\n\t\t\t\tthis._toggleScrollToLoad(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// calculate new length\n\t\t\toBindingInfo.length = iOldLength + this.getModel(\"view\").getProperty(\"/growingThreshold\");\n\n\t\t\t// rebind the result set to show the new items\n\t\t\tthis.byId(\"results\").bindAggregation(this._sAggregationName, oBindingInfo);\n\t\t\tthis._oScrollToLastResultPositionEventDelegate = {\n\t\t\t\tonAfterRendering: function () {\n\t\t\t\t\tvar oLastItemFromOldLength = this.byId(\"results\").getAggregation(this._sAggregationName)[iOldLength - 1];\n\t\t\t\t\tif (oLastItemFromOldLength.$()[0].scrollIntoView) {\n\t\t\t\t\t\toLastItemFromOldLength.$()[0].scrollIntoView(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.byId(\"resultContainer\").scrollToElement(oLastItemFromOldLength);\n\t\t\t\t\t}\n\t\t\t\t\tthis.byId(\"results\").removeEventDelegate(this._oScrollToLastResultPositionEventDelegate);\n\t\t\t\t}.bind(this)\n\t\t\t};\n\t\t\tthis.byId(\"results\").addEventDelegate(this._oScrollToLastResultPositionEventDelegate);\n\t\t}\n\n\t});\n});",
		"sap/ui/demo/iconexplorer/model/FavoriteModel.js": "sap.ui.define([\n\t\"sap/ui/demo/iconexplorer/model/Sorter\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"jquery.sap.storage\"\n], function(Sorter, JSONModel, jQuery) {\n\t\"use strict\";\n\n\treturn JSONModel.extend(\"sap.ui.demo.iconexplorer.model.FavoriteModel\", {\n\n\t\t_STORAGE_KEY : \"ICON_EXPLORER_FAVORITES\",\n\t\t_storage : jQuery.sap.storage(jQuery.sap.storage.Type.local),\n\n\t\t/**\n\t\t * Fetches the favorites from local storage and sets up the JSON model\n\t\t * @param {Object} oSettings a settings object passed to the JSON model\n\t\t * @return {sap.ui.demo.iconexplorer.model.FavoriteModel} the new model instance\n\t\t */\n\t\tconstructor : function(oSettings) {\n\t\t\t// call super constructor\n\t\t\tJSONModel.apply(this, arguments);\n\n\t\t\tthis.setSizeLimit(1000000);\n\n\t\t\t// load data from local storage\n\t\t\tvar sJSON = this._storage.get(this._STORAGE_KEY);\n\t\t\tvar oData;\n\n\t\t\ttry {\n\t\t\t\toData = JSON.parse(sJSON);\n\t\t\t} catch (oException) {\n\t\t\t\tjQuery.sap.log.warning(\"FavoriteModel: Could not parse the data read from local storage\");\n\t\t\t}\n\n\t\t\t// default data if storage is empty\n\t\t\tif (!oData) {\n\t\t\t\toData = {\n\t\t\t\t\tcount : 0,\n\t\t\t\t\ticons : []\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// set data\n\t\t\tthis.setData(oData);\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Checks if a given icon is a favorite\n\t\t * @param {string} sName the icon name\n\t\t * @return {boolean} the favorite state of the icon\n\t\t */\n\t\tisFavorite : function(sName) {\n\t\t\tvar oData = this.getData();\n\n\t\t\treturn oData.icons.some(function(oItem) {\n\t\t\t\treturn oItem.name === sName;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Toogles the favorite state of a given icon\n\t\t * @param {sap.ui.model.Context} oBindingContext the binding context of the icon to be toggled\n\t\t * @return {boolean} the new favorite state of the icon\n\t\t */\n\t\ttoggleFavorite : function(oBindingContext) {\n\t\t\tvar sName = oBindingContext.getProperty(\"name\"),\n\t\t\t\tbFavorite = this.isFavorite(sName),\n\t\t\t\toData = this.getData();\n\n\t\t\tif (bFavorite) {\n\t\t\t\toData.icons = oData.icons.filter(function(oIcon){\n\t\t\t\t\treturn oIcon.name !== sName;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toData.icons.push(oBindingContext.getObject());\n\t\t\t}\n\t\t\toData.count = oData.icons.length;\n\n\t\t\t// sort icons by name\n\t\t\toData.icons.sort(Sorter.sortByName);\n\n\t\t\t// update model\n\t\t\tthis.setData(oData);\n\n\t\t\t// update local storage\n\t\t\tvar sJSON = JSON.stringify(oData);\n\t\t\tthis._storage.put(this._STORAGE_KEY, sJSON);\n\n\t\t\treturn !bFavorite;\n\t\t}\n\t});\n});\n",
		"sap/ui/demo/iconexplorer/model/IconModel.js": "/*!\n * ${copyright}\n */\n\nsap.ui.define([\n\t\"jquery.sap.global\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/IconPool\",\n\t\"sap/ui/demo/iconexplorer/model/Sorter\"\n], function (jQuery, JSONModel, IconPool, Sorter) {\n\t\"use strict\";\n\n\treturn JSONModel.extend(\"sap.ui.demo.iconexplorer.model.IconModel\", {\n\n\t\t/**\n\t\t * Loads an icon font and rearranges it based on metadata for display im the icon explorer.\n\t\t * @class\n\t\t * @public\n\t\t * @alias sap.ui.demo.iconexplorer.model.IconModel\n\t\t */\n\t\tconstructor : function () {\n\n\t\t\t// call base class constructor\n\t\t\tJSONModel.apply(this, arguments);\n\t\t\tthis.setSizeLimit(10000);\n\n\t\t\t// set up the JSON model data in a timeout to not block the UI while loading the app\n\t\t\tsetTimeout(function () {\n\t\t\t\tthis._iStartTime = new Date().getTime();\n\t\t\t\tthis._loadIcons();\n\t\t\t}.bind(this), 0);\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Promise to register when the asynchronous loading of an icon font including its metadata is finished\n\t\t * @return {Promise} a promise that is resolved when all icons are loaded\n\t\t */\n\t\ticonsLoaded: function () {\n\t\t\tif (!this._oIconsLoadedPromise) {\n\t\t\t\tthis._oIconsLoadedPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\t\tthis._fnIconsLoadedResolve = fnResolve;\n\t\t\t\t\tthis._fnIconsLoadedReject = fnReject;\n\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t\treturn this._oIconsLoadedPromise;\n\t\t},\n\n\t\t/**\n\t\t * Returns the binding path of an icon for a given icon name\n\t\t * @param {string} sName the icon name\n\t\t * @param {string} [sGroupPath] the path to the group to search in\n\t\t * @return {string} the icon path\n\t\t */\n\t\tgetIconPath: function (sName, sGroupPath) {\n\t\t\tvar sIconPath = sGroupPath || \"/groups/0\";\n\t\t\tsIconPath += \"/icons\";\n\n\t\t\tvar aIcons = this.getProperty(sIconPath),\n\t\t\t\tiIconIndex;\n\n\t\t\tfor (var i = 0; i < aIcons.length; i++) {\n\t\t\t\tif (aIcons[i].name === sName) {\n\t\t\t\t\tiIconIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (iIconIndex >= 0) {\n\t\t\t\treturn sIconPath + \"/\" + iIconIndex;\n\t\t\t} else {\n\t\t\t\treturn this.getIconPath(\"error\", sGroupPath);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the binding path for a given group name\n\t\t * @param {string} sName the name of the group\n\t\t * @return {string} the binding path for the group\n\t\t */\n\t\tgetGroupPath: function (sName) {\n\t\t\tvar aCategories = this.getProperty(\"/groups\"),\n\t\t\t\tiIndex = 0;\n\n\t\t\tfor (var i = 0; i < aCategories.length; i++) {\n\t\t\t\tif (aCategories[i].name === sName) {\n\t\t\t\t\tiIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn \"/groups/\" + iIndex;\n\t\t},\n\n\t\t/**\n\t\t * Returns the groups the icons is assigned to\n\t\t * @param {string} sName the icon name\n\t\t * @return {Array} the groups the icon is assigned to\n\t\t */\n\t\tgetIconGroups: function (sName) {\n\t\t\tvar aGroups = this.getProperty(\"/groups\"),\n\t\t\t\taIconGroups = [];\n\n\t\t\tif (aGroups) {\n\t\t\t\taGroups = aGroups.slice(1);\n\n\t\t\t\taIconGroups = aGroups.filter(function (oGroup) {\n\t\t\t\t\treturn oGroup.icons.some(function (oItem) {\n\t\t\t\t\t\treturn oItem.name == sName;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn \taIconGroups.map(function(oGroup) {\n\t\t\t\treturn oGroup.text;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Returns the unicode symbol for an icon\n\t\t * @param {string} sName the icon name\n\t\t * @return {string} the unicode representation of the icon\n\t\t */\n\t\tgetUnicode: function (sName) {\n\t\t\tvar oInfo = IconPool.getIconInfo(sName);\n\n\t\t\treturn (oInfo ? oInfo.content : \"?\");\n\t\t},\n\n\t\t/**\n\t\t * Returns the unicode symbol in HTML syntax for an icon\n\t\t * @param {string} sName the icon name\n\t\t * @return {string} the unicode HTML representation of the icon\n\t\t */\n\t\tgetUnicodeHTML: function (sName) {\n\t\t\tvar oInfo = IconPool.getIconInfo(sName);\n\n\t\t\treturn (oInfo ? \"&#x\" + oInfo.content.charCodeAt(0).toString(16) + \";\" : \"?\");\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* internal methods                                            */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Load and process all icons from the metadata\n\t\t * @private\n\t\t */\n\t\t_loadIcons: function () {\n\t\t\tvar bGroupsLoaded = false,\n\t\t\t\tbTagsLoaded = false,\n\t\t\t\toMetadataloaded = new Promise(function(fnResolve, fnReject) {\n\t\t\t\t\t// load groups asynchronously\n\t\t\t\t\tjQuery.ajax(jQuery.sap.getModulePath(\"sap.ui.demo.iconexplorer\", \"/model/groups.json\"), {\n\t\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\t\tsuccess: function (oData) {\n\t\t\t\t\t\t\tbGroupsLoaded = true;\n\t\t\t\t\t\t\tthis._oTempGroupData = oData;\n\t\t\t\t\t\t\tif (bTagsLoaded) {\n\t\t\t\t\t\t\t\tfnResolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\terror: fnReject\n\t\t\t\t\t});\n\n\t\t\t\t\t// load tags asynchronously\n\t\t\t\t\tjQuery.ajax(jQuery.sap.getModulePath(\"sap.ui.demo.iconexplorer\", \"/model/tags.json\"), {\n\t\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\t\tsuccess: function (oData) {\n\t\t\t\t\t\t\tbTagsLoaded = true;\n\t\t\t\t\t\t\tthis._oTempTagsData = oData;\n\t\t\t\t\t\t\tif (bGroupsLoaded) {\n\t\t\t\t\t\t\t\tfnResolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\terror: fnReject\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\n\t\t\t// process data once both models are loaded\n\t\t\toMetadataloaded.then(this._onMetadataLoaded.bind(this), this._onError.bind(this));\n\t\t},\n\n\t\t/**\n\t\t *\tPost process all data for display in the icon explorer\n\t\t * @private\n\t\t */\n\t\t_onMetadataLoaded : function()  {\n\t\t\t// process groups and tags\n\t\t\tthis._processGroups();\n\t\t\tthis._processTags();\n\n\t\t\t// trace elapsed time\n\t\t\tjQuery.sap.log.info(\"IconModel: Loaded and sorted all icons in \" + (new Date().getTime() - this._iStartTime) + \" ms\");\n\n\t\t\t// set the model data\n\t\t\tthis.setData(this._oTempGroupData);\n\n\t\t\t// resolve iconsLoaded promise\n\t\t\tthis._fnIconsLoadedResolve();\n\n\t\t\t// cleanup\n\t\t\tthis._oTempGroupData = null;\n\t\t\tthis._oTempTagsData = null;\n\t\t},\n\n\t\t/**\n\t\t * Fires a request failed event in case the metadata for the icons could not be read\n\t\t * @param {object} oResponse the response object from the ajax request\n\t\t * @private\n\t\t */\n\t\t_onError: function (oResponse) {\n\t\t\toResponse.error = \"Failed to load the icon metadata, check for parse errors\";\n\t\t\tthis.fireRequestFailed({response: oResponse});\n\t\t\tthis._fnIconsLoadedReject();\n\t\t},\n\n\t\t/**\n\t\t * Processes all groups: sort and enrich the model data\n\t\t * @private\n\t\t */\n\t\t_processGroups : function() {\n\t\t\t// sort groups by name (sorting is done in the model once for faster processing in the views)\n\t\t\tthis._oTempGroupData.groups.sort(Sorter.sortByName);\n\n\t\t\tfor (var i = 0; i < this._oTempGroupData.groups.length; i++) {\n\t\t\t\t// count & sort icons of group\n\t\t\t\tif (this._oTempGroupData.groups[i].icons) {\n\t\t\t\t\tthis._oTempGroupData.groups[i].count = this._oTempGroupData.groups[i].icons.length;\n\t\t\t\t\tthis._oTempGroupData.groups[i].icons.sort(Sorter.sortByName);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Processes all tags: relate tags to the icons in the all group\n\t\t * @private\n\t\t */\n\t\t_processTags : function() {\n\t\t\tvar oData = this._oTempTagsData,\n\t\t\t\taIconNames = IconPool.getIconNames(),\n\t\t\t\taIcons = [];\n\n\t\t\t// add all icons from icon pool and append tag info\n\t\t\taIcons = aIconNames.map(function (sIconName) {\n\t\t\t\tvar oIconMetadata = oData[sIconName],\n\t\t\t\t\taTags = [];\n\n\t\t\t\tif (oIconMetadata) {\n\t\t\t\t\taTags = oIconMetadata.tags.map(function (sTag) {\n\t\t\t\t\t\treturn {name: sTag};\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tname : sIconName,\n\t\t\t\t\ttags : aTags,\n\t\t\t\t\ttagString : (oIconMetadata ? oIconMetadata.tags.join(\" \") : \"\")\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// sort and add the all group at index 0\n\t\t\taIcons.sort(Sorter.sortByName);\n\t\t\tthis._oTempGroupData.groups.splice(0, 0, {\n\t\t\t\tname : \"all\",\n\t\t\t\ttext : \"All\",\n\t\t\t\ticons : aIcons,\n\t\t\t\tcount : aIcons.length\n\t\t\t});\n\n\t\t\t// calculate top\n\t\t\tthis._calculateTagsPerGroup();\n\t\t},\n\n\t\t/**\n\t\t * Calculates the top tags per category and copies over the tags to each group\n\t\t * @private\n\t\t */\n\t\t_calculateTagsPerGroup: function () {\n\t\t\tvar i = 0,\n\t\t\t\tj = 0;\n\t\t\tfor (i = 0; i < this._oTempGroupData.groups.length; i++) {\n\t\t\t\tvar oTagOccurrences = {};\n\t\t\t\tfor (j = 0; j < this._oTempGroupData.groups[i].icons.length; j++) {\n\t\t\t\t\tvar oTags = this._oTempGroupData.groups[i].icons[j].tags;\n\n\t\t\t\t\tif (!oTags) {\n\t\t\t\t\t\t/* eslint-disable no-loop-func */\n\t\t\t\t\t\tvar aIcons = this._oTempGroupData.groups[0].icons.filter(function (oIcon) {\n\t\t\t\t\t\t\treturn oIcon.name === this._oTempGroupData.groups[i].icons[j].name;\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t\t/* eslint-enable no-alert */\n\t\t\t\t\t\tif (aIcons) {\n\t\t\t\t\t\t\t// copy over tags from all section\n\t\t\t\t\t\t\tthis._oTempGroupData.groups[i].icons[j].tags = aIcons[0].tags;\n\t\t\t\t\t\t\tthis._oTempGroupData.groups[i].icons[j].tagString = aIcons[0].tagString;\n\t\t\t\t\t\t\toTags = aIcons[0].tags;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (oTags) {\n\t\t\t\t\t\tfor (var k = 0; k < oTags.length; k++) {\n\t\t\t\t\t\t\tif (!oTagOccurrences[oTags[k].name]) {\n\t\t\t\t\t\t\t\toTagOccurrences[oTags[k].name] = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\toTagOccurrences[oTags[k].name]++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* eslint-disable no-loop-func */\n\t\t\t\tvar aSortedTagsByRelevance = Object.keys(oTagOccurrences).sort(function (sKey1, sKey2) {\n\t\t\t\t\tif (oTagOccurrences[sKey1] === oTagOccurrences[sKey2]) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else if (oTagOccurrences[sKey1] < oTagOccurrences[sKey2]) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\tthis._oTempGroupData.groups[i].tags = [];\n\t\t\t\tfor (j = 0; j < aSortedTagsByRelevance.length; j++) {\n\t\t\t\t\tthis._oTempGroupData.groups[i].tags.push({ \"name\" : aSortedTagsByRelevance[j]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});",
		"sap/ui/demo/iconexplorer/model/Sorter.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\t\t/**\n\t\t * Sorts icons by icon name\n\t\t * @param {Object} oContext1 The first context\n\t\t * @param {Object} oContext2 The second context\n\t\t * @return {number} the sorting result (-1, 0, 1)\n\t\t */\n\t\tsortByName : function(oContext1, oContext2) {\n\t\t\tif (!oContext1 || !oContext1.name) {\n\t\t\t\treturn -1;\n\t\t\t} else if (!oContext2 || !oContext2.name) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\tvar sContext1Name = oContext1.name.toLowerCase();\n\t\t\t\tvar sContext2Name = oContext2.name.toLowerCase();\n\n\t\t\t\tif (sContext1Name < sContext2Name) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn (sContext1Name > sContext2Name) ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n});\n",
		"sap/ui/demo/iconexplorer/model/formatter.js": "sap.ui.define([\n\t'jquery.sap.global'\n] , function ($) {\n\t\"use strict\";\n\n\treturn {\n\n\t\t/**\n\t\t * Workaround for having to set an explicit height on the fixFlex surrounding container\n\t\t * @public\n\t\t * @param {string} sDummy does not matter\n\t\t * @returns {string} sValue 4rem in compact mode, 5rem on cozy mode\n\t\t */\n\t\tpreviewPanelHeight : function (sDummy) {\n\t\t\tif ($(\"body\").hasClass(\"sapUiSizeCompact\") || $(\"body\").find(\".sapUiSizeCompact\").length) {\n\t\t\t\treturn \"6.0625rem\";\n\t\t\t} else {\n\t\t\t\treturn \"8rem\";\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks if an icon is in the favorite model\n\t\t * @param {string} sName the name of the icon\n\t\t * @return {boolean} true if the icon is a favorite\n\t\t */\n\t\tisFavorite: function (sName) {\n\t\t\treturn this.getModel(\"fav\").isFavorite(sName);\n\t\t},\n\n\t\t/**\n\t\t * Makes the first letter of a string uppercase\n\t\t * @param {string} sValue the value to be formatted\n\t\t * @return {string} the expected result\n\t\t */\n\t\tuppercaseFirstLetter: function (sValue) {\n\t\t\treturn sValue.charAt(0).toUpperCase() + sValue.slice(1);\n\t\t}\n\n\t};\n\n});",
		"sap/ui/demo/iconexplorer/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"sap/ui/demo/iconexplorer/register-worker.js": "/**\r\n * Register the service worker\r\n */\r\nif ('serviceWorker' in navigator) {\r\n\tnavigator.serviceWorker\r\n\t\t.register('./service-worker.js')\r\n\t\t.then(function () { \r\n\t\t\tconsole.log('Service Worker Registered'); \r\n\t\t});\r\n}",
		"sap/ui/demo/iconexplorer/service-worker.js": "const CACHE_NAME = 'ui5-iconexplorer-pwa-v0.2.0';\r\nvar RESOURCES_TO_PRELOAD = [\r\n\t'Component-preload.js',\r\n\t'/openui5/resources/sap-ui-messagebundle-preload.js',\r\n\t'/icons/icon.svg',\r\n\t'index.html',\r\n    'register-worker.js'\r\n];\r\n\r\n//Preload UI5 core and libraries by install\r\nconst cdnBase = 'https://openui5nightly.hana.ondemand.com/resources/';\r\nRESOURCES_TO_PRELOAD = RESOURCES_TO_PRELOAD.concat([\r\n    `${cdnBase}sap-ui-core.js`,\r\n    `${cdnBase}sap/ui/core/library-preload.js`,\r\n    `${cdnBase}sap/m/themes/sap_belize/library.css`,\r\n    `${cdnBase}sap/ui/core/themes/base/fonts/SAP-icons.woff2`,\r\n    `${cdnBase}sap/m/library-preload.js`,\r\n\t`${cdnBase}sap/ui/core/themes/sap_belize/library.css`\r\n]);\r\n\r\n// Preload some resources during install\r\nself.addEventListener('install', function (event) {\r\n\tevent.waitUntil(\r\n\t\tcaches.open(CACHE_NAME).then(function (cache) {\r\n\t\t\treturn cache.addAll(RESOURCES_TO_PRELOAD);\r\n\t\t})\r\n\t);\r\n});\r\n\r\n// Delete obsolete caches during activate\r\nself.addEventListener('activate', function (event) {\r\n\tevent.waitUntil(\r\n\t\tcaches.keys().then(function (keyList) {\r\n\t\t\treturn Promise.all(keyList.map(function (key) {\r\n\t\t\t\tif (key !== CACHE_NAME) {\r\n\t\t\t\t\treturn caches.delete(key);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t})\r\n\t);\r\n});\r\n\r\n// During runtime, get files from cache or -> fetch, then save to cache\r\nself.addEventListener('fetch', function (event) {\r\n\tevent.respondWith(\r\n\t\tcaches.match(event.request).then(function (response) {\r\n\t\t\tif (response) {\r\n\t\t\t\treturn response; // There is a cached version of the resource already\r\n\t\t\t}\r\n\r\n\t\t\tlet requestCopy = event.request.clone();\r\n\t\t\treturn fetch(requestCopy).then(function (response) {\r\n\t\t\t\tif (!response) {\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t}\r\n\t\t\t\t// If a resource is retrieved, save a copy to the cache.\r\n\t\t\t\t// Unfortunately, it is not possible to check if the response form CDN\r\n\t\t\t\t// was successful (responses with type === 'opaque' have zero status). \r\n\t\t\t\t// For example, a 404 CDN error will be cached, too.\r\n\t\t\t\tif (response.status === 200 || response.type === 'opaque') {\r\n\t\t\t\t\tlet responseCopy = response.clone();\r\n\t\t\t\t\tcaches.open(CACHE_NAME).then(function (cache) {\r\n\t\t\t\t\t\tcache.put(event.request, responseCopy);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn response;\r\n\t\t\t});\r\n\t\t})\r\n\t);\r\n});",
		"sap/ui/demo/iconexplorer/view/browse/Details.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t<Table\n\t\tid=\"results\"\n\t\twidth=\"auto\"\n\t\tclass=\"sapUiSmallMargin\"\n\t\tmode=\"SingleSelectMaster\"\n\t\tselectionChange=\"onSelectionChange\"\n\t\titems=\"{\n\t\t\tpath: '/groups/0/icons',\n\t\t\ttemplateShareable: true\n\t\t}\"\n\t\tnoDataText=\"{view>/overviewNoDataText}\"\n\t\tgrowing=\"true\"\n\t\tgrowingScrollToLoad=\"true\"\n\t\tgrowingThreshold=\"{view>/growingThreshold}\"\n\t\tupdateFinished=\"onUpdateFinished\">\n\n\t\t<columns>\n\t\t\t<Column id=\"iconColumn\" width=\"2rem\">\n\t\t\t\t<Text id=\"iconColumnTitle\" text=\"{i18n>tableIconColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column id=\"nameColumn\" width=\"20%\">\n\t\t\t\t<Text id=\"nameColumnTitle\" text=\"{i18n>tableNameColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column\n\t\t\t\tid=\"codeColumn\"\n\t\t\t\twidth=\"20%\"\n\t\t\t\tminScreenWidth=\"Tablet\"\n\t\t\t\tdemandPopin=\"true\">\n\t\t\t\t<Text id=\"codeColumnTitle\" text=\"{i18n>tableCodeColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column\n\t\t\t\tid=\"tagsColumn\"\n\t\t\t\twidth=\"35%\"\n\t\t\t\tminScreenWidth=\"Desktop\"\n\t\t\t\tdemandPopin=\"true\">\n\t\t\t\t<Text id=\"tagsColumnTitle\" text=\"{i18n>tableTagsColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column id=\"favColumn\" width=\"2rem\"/>\n\t\t</columns>\n\n\t\t<items>\n\t\t\t<ColumnListItem\n\t\t\t\ttype=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<core:Icon size=\"2rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t\t\t<Label design=\"Bold\" text=\"{name}\"/>\n\t\t\t\t\t<Text text=\"sap-icon://{name}\"/>\n\t\t\t\t\t<Tokenizer\n\t\t\t\t\t\tclass=\"sapUiTinyMarginTop\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\ttokens=\"{\n\t\t\t\t\t\t\tpath: 'tags',\n\t\t\t\t\t\t\ttemplateShareable: true\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\teditable=\"false\">\n\t\t\t\t\t\t<Token text=\"{name}\" select=\"onTagSelect\"/>\n\t\t\t\t\t</Tokenizer>\n\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\ticon=\"sap-icon://favorite\"\n\t\t\t\t\t\tpress=\"onToggleFavorite\"\n\t\t\t\t\t\tpressed=\"{\n\t\t\t\t\t\t\tpath: 'name',\n\t\t\t\t\t\t\tformatter: '.formatter.isFavorite'\n\t\t\t\t\t\t}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"sap/ui/demo/iconexplorer/view/browse/Favorites.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\t<Table\n\t\tid=\"results\"\n\t\twidth=\"auto\"\n\t\tclass=\"sapUiSmallMargin\"\n\t\tmode=\"SingleSelectMaster\"\n\t\tselectionChange=\"onSelectionChange\"\n\t\titems=\"{fav>/icons}\"\n\t\tnoDataText=\"{view>/overviewNoDataText}\"\n\t\tgrowing=\"true\"\n\t\tgrowingThreshold=\"{view>/growingThreshold}\"\n\t\tupdateFinished=\"onUpdateFinished\">\n\n\t\t<columns>\n\t\t\t<Column id=\"iconColumn\" width=\"2rem\">\n\t\t\t\t<Text id=\"iconColumnTitle\" text=\"{i18n>tableIconColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column id=\"nameColumn\" width=\"20%\">\n\t\t\t\t<Text id=\"nameColumnTitle\" text=\"{i18n>tableNameColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column\n\t\t\t\tid=\"codeColumn\"\n\t\t\t\twidth=\"20%\"\n\t\t\t\tminScreenWidth=\"Desktop\"\n\t\t\t\tdemandPopin=\"true\">\n\t\t\t\t<Text id=\"codeColumnTitle\" text=\"{i18n>tableCodeColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column\n\t\t\t\tid=\"tagsColumn\"\n\t\t\t\twidth=\"35%\"\n\t\t\t\tminScreenWidth=\"Desktop\"\n\t\t\t\tdemandPopin=\"true\">\n\t\t\t\t<Text id=\"tagsColumnTitle\" text=\"{i18n>tableTagsColumnTitle}\"/>\n\t\t\t</Column>\n\t\t\t<Column id=\"favColumn\" width=\"2rem\"/>\n\t\t</columns>\n\n\t\t<items>\n\t\t\t<ColumnListItem\n\t\t\t\ttype=\"Active\">\n\t\t\t\t<cells>\n\t\t\t\t\t<core:Icon size=\"2rem\" src=\"sap-icon://{fav>name}\" color=\"Default\"/>\n\t\t\t\t\t<Label design=\"Bold\" text=\"{fav>name}\"/>\n\t\t\t\t\t<Text text=\"sap-icon://{fav>name}\"/>\n\t\t\t\t\t<Tokenizer\n\t\t\t\t\t\tclass=\"sapUiTinyMarginTop\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\ttokens=\"{\n\t\t\t\t\t\t\tpath: 'fav>tags',\n\t\t\t\t\t\t\ttemplateShareable: true\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\teditable=\"false\">\n\t\t\t\t\t\t<Token text=\"{fav>name}\" select=\"onTagSelect\"/>\n\t\t\t\t\t</Tokenizer>\n\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\ticon=\"sap-icon://favorite\"\n\t\t\t\t\t\tpress=\"onToggleFavorite\"\n\t\t\t\t\t\tpressed=\"{\n\t\t\t\t\t\t\tpath: 'fav>name',\n\t\t\t\t\t\t\tformatter: '.formatter.isFavorite'\n\t\t\t\t\t\t}\"/>\n\t\t\t\t</cells>\n\t\t\t</ColumnListItem>\n\t\t</items>\n\t</Table>\n</core:FragmentDefinition>",
		"sap/ui/demo/iconexplorer/view/browse/Grid.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:l=\"sap.ui.layout\"\n\txmlns:core=\"sap.ui.core\">\n\t<l:VerticalLayout width=\"100%\">\n\t\t<Panel\n\t\t\tid=\"results\"\n\t\t\tvisible=\"{= ${view>/iconFilterCount} !== 0 }\"\n\t\t\twidth=\"auto\"\n\t\t\tclass=\"sapUiTinyMargin sapUiNoContentPadding\"\n\t\t\tcontent=\"{\n\t\t\t\tpath: '/groups/0/icons',\n\t\t\t\tlength: '50',\n\t\t\t\tsorter: {\n\t\t\t\t\tpath: 'name',\n\t\t\t\t\tdescending: false\n\t\t\t\t},\n\t\t\t\tevents: {\n\t\t\t\t\tchange: '.onUpdateFinished'\n\t\t\t\t}\n\t\t\t}\">\n\t\t\t<l:VerticalLayout\n\t\t\t\twidth=\"130px\"\n\t\t\t\tclass=\"sapThemeBaseBG-asBackgroundColor sapUiTinyMargin gridLayoutCell sapMLIB sapMLIBFocusable sapMFocusable\">\n\t\t\t\t<core:Icon size=\"2.5rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t\t<Label design=\"Bold\" text=\"{name}\" textAlign=\"center\" class=\"sapUiTinyMarginTopBottom\"/>\n\t\t\t\t<ToggleButton\n\t\t\t\t\ticon=\"sap-icon://favorite\"\n\t\t\t\t\tpress=\"onToggleFavorite\"\n\t\t\t\t\tpressed=\"{\n\t\t\t\t\t\tpath: 'name',\n\t\t\t\t\t\tformatter: '.formatter.isFavorite'\n\t\t\t\t\t}\"/>\n\t\t\t</l:VerticalLayout>\n\t\t</Panel>\n\t\t<Label\n\t\t\twidth=\"100%\"\n\t\t\ttextAlign=\"Center\"\n\t\t\tclass=\"sapUiSmallMarginTop\"\n\t\t\ttext=\"{view>/overviewNoDataText}\"\n\t\t\tvisible=\"{= ${view>/iconFilterCount} === 0 }\"/>\n\t</l:VerticalLayout>\n</core:FragmentDefinition>",
		"sap/ui/demo/iconexplorer/view/browse/Visual.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:l=\"sap.ui.layout\"\n\txmlns:core=\"sap.ui.core\">\n\t<l:VerticalLayout width=\"100%\">\n\t<Panel\n\t\tid=\"results\"\n\t\twidth=\"auto\"\n\t\tclass=\"sapUiTinyMargin sapUiNoContentPadding\"\n\t\tcontent=\"{\n\t\t\tpath: '/groups/0/icons',\n\t\t\tlength: '50',\n\t\t\tsorter: {\n\t\t\t\tpath: 'name',\n\t\t\t\tdescending: false\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\tchange: '.onUpdateFinished'\n\t\t\t}\n\t\t}\">\n\t\t<l:VerticalLayout\n\t\t\twidth=\"130px\"\n\t\t\tclass=\"sapThemeBaseBG-asBackgroundColor sapUiTinyMargin visualLayoutCell sapMLIB sapMLIBFocusable sapMFocusable\">\n\t\t\t<core:Icon size=\"1rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t<core:Icon size=\"1.25rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t<core:Icon size=\"1.375rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t<core:Icon size=\"1.5rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t<core:Icon size=\"2rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t<core:Icon size=\"2.5rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t<core:Icon size=\"3rem\" src=\"sap-icon://{name}\" color=\"Default\"/>\n\t\t\t<Label design=\"Bold\" text=\"{name}\" textAlign=\"center\" class=\"sapUiTinyMarginTopBottom\"/>\n\t\t\t<ToggleButton\n\t\t\t\ticon=\"sap-icon://favorite\"\n\t\t\t\tpress=\"onToggleFavorite\"\n\t\t\t\tpressed=\"{\n\t\t\t\t\tpath: 'name',\n\t\t\t\t\tformatter: '.formatter.isFavorite'\n\t\t\t\t}\"/>\n\t\t</l:VerticalLayout>\n\t</Panel>\n\t<Label\n\t\twidth=\"100%\"\n\t\ttextAlign=\"Center\"\n\t\tclass=\"sapUiSmallMarginTop\"\n\t\ttext=\"{view>/overviewNoDataText}\"\n\t\tvisible=\"{= ${view>/iconFilterCount} === 0 }\"/>\n\t</l:VerticalLayout>\n</core:FragmentDefinition>",
		"sap/ui/demo/iconexplorer/view/App.view.xml": "<mvc:View\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tcontrollerName=\"sap.ui.demo.iconexplorer.controller.App\"\n\tdisplayBlock=\"true\"\n\txmlns=\"sap.m\">\n\n\t<App id=\"app\"\n\t\tbusy=\"{view>/busy}\"\n\t\tbusyIndicatorDelay=\"{view>/delay}\"\n\t\tclass=\"sapUiDemoIconExplorer\"/>\n\n</mvc:View>",
		"sap/ui/demo/iconexplorer/view/NotFound.view.xml": "<mvc:View\n\tcontrollerName=\"sap.ui.demo.iconexplorer.controller.NotFound\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\ttitle=\"{i18n>notFoundTitle}\"\n\t\ttext=\"{i18n>notFoundText}\"\n\t\ticon=\"{sap-icon://document}\"\n\t\tid=\"page\"\n\t\tdescription=\"\">\n\t\t<customDescription>\n\t\t\t<Link id=\"link\" text=\"{i18n>backToOverview}\" press=\"onLinkPressed\"/>\n\t\t</customDescription>\n\t</MessagePage>\n\n</mvc:View>",
		"sap/ui/demo/iconexplorer/view/Overview.view.xml": "<mvc:View\n\tcontrollerName=\"sap.ui.demo.iconexplorer.controller.Overview\"\n\txmlns=\"sap.m\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:l=\"sap.ui.layout\"\n\txmlns:core=\"sap.ui.core\"\n\txmlns:f=\"sap.f\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t<semantic:FullscreenPage\n\t\tid=\"page\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"true\"\n\t\tshowFooter=\"false\"\n\t\ttitle=\"{i18n>overviewViewTitle}\">\n\t\t<semantic:content>\n\t\t\t<IconTabBar\n\t\t\t\tid=\"iconTabBar\"\n\t\t\t\tselect=\"onTabSelect\"\n\t\t\t\tstretchContentHeight=\"true\"\n\t\t\t\texpandable=\"false\"\n\t\t\t\tclass=\"sapUiNoContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter\n\t\t\t\t\t\tshowAll=\"true\"\n\t\t\t\t\t\tcount=\"{view>/iconFilterCount}\"\n\t\t\t\t\t\ttext=\"{i18n>overviewTabAllText}\"\n\t\t\t\t\t\ttooltip=\"{i18n>overviewTabAllTooltip}\"\n\t\t\t\t\t\tkey=\"all\"/>\n\t\t\t\t\t<IconTabSeparator/>\n\t\t\t\t\t<IconTabFilter\n\t\t\t\t\t\ticon=\"sap-icon://grid\"\n\t\t\t\t\t\ttext=\"{i18n>overviewTabGridText}\"\n\t\t\t\t\t\ttooltip=\"{i18n>overviewTabDetailsTooltip}\"\n\t\t\t\t\t\tkey=\"grid\"/>\n\t\t\t\t\t<IconTabFilter\n\t\t\t\t\t\ticon=\"sap-icon://list\"\n\t\t\t\t\t\ttext=\"{i18n>overviewTabDetailsText}\"\n\t\t\t\t\t\ttooltip=\"{i18n>overviewTabDetailsTooltip}\"\n\t\t\t\t\t\tkey=\"details\"/>\n\t\t\t\t\t<IconTabFilter\n\t\t\t\t\t\ticon=\"sap-icon://palette\"\n\t\t\t\t\t\ttext=\"{i18n>overviewTabVisualText}\"\n\t\t\t\t\t\ttooltip=\"{i18n>overviewTabVisualTooltip}\"\n\t\t\t\t\t\tkey=\"visual\"/>\n\t\t\t\t\t<IconTabFilter\n\t\t\t\t\t\ticon=\"sap-icon://favorite-list\"\n\t\t\t\t\t\ttext=\"{i18n>overviewTabFavoritesText}\"\n\t\t\t\t\t\ttooltip=\"{i18n>overviewTabFavoritesTooltip}\"\n\t\t\t\t\t\tkey=\"favorites\"/>\n\t\t\t\t</items>\n\t\t\t\t<content>\n\t\t\t\t\t<l:ResponsiveSplitter id=\"splitter\" defaultPane=\"default\">\n\t\t\t\t\t\t<l:PaneContainer>\n\t\t\t\t\t\t\t<l:SplitPane requiredParentWidth=\"400\" id=\"default\">\n\t\t\t\t\t\t\t\t<ScrollContainer id=\"resultContainer\" vertical=\"true\" horizontal=\"false\" height=\"100%\">\n\t\t\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\t\t\t\tclass=\"sapUiSmallMargin sapUiNoMarginBottom\"\n\t\t\t\t\t\t\t\t\t\talignItems=\"Stretch\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<SearchField\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"searchField\"\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip=\"{i18n>overviewSearchTooltip}\"\n\t\t\t\t\t\t\t\t\t\t\t\tliveChange=\"onSearch\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapUiTinyMarginEnd\"\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t\t\t\t</SearchField>\n\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"categorySelection\"\n\t\t\t\t\t\t\t\t\t\t\t\titems=\"{/groups}\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\" sapUiTinyMarginEnd\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{i18n>overviewSelectCategoryPlaceholder}\"\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip=\"{i18n>overviewSelectCategoryTooltip}\"\n\t\t\t\t\t\t\t\t\t\t\t\tchange=\"onSelectCategory\"\n\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"{= ${device>/system/phone} ? false : true}\"\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"100%\">\n\t\t\t\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{name}\" text=\"{text}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</FlexBox>\n\n\t\t\t\t\t\t\t\t\t<OverflowToolbar\n\t\t\t\t\t\t\t\t\t\tid=\"tagSelection\"\n\t\t\t\t\t\t\t\t\t\tvisible=\"{= ${view>/iconFilterCount} !== 0 &amp;&amp; (${device>/system/phone} ? false : true)}\"\n\t\t\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\t\t\t\tdesign=\"Transparent\"\n\t\t\t\t\t\t\t\t\t\tcontent=\"{\n\t\t\t\t\t\t\t\t\t\t\tpath:'/groups/0/tags',\n\t\t\t\t\t\t\t\t\t\t\tfactory: '._tagSelectionFactory',\n\t\t\t\t\t\t\t\t\t\t\tlength: 50\n\t\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"{i18n>overviewSelectTagsTooltip}\">\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\n\t\t\t\t\t\t\t\t</ScrollContainer>\n\t\t\t\t\t\t\t</l:SplitPane>\n\t\t\t\t\t\t\t<l:SplitPane requiredParentWidth=\"800\">\n\t\t\t\t\t\t\t\t<ScrollContainer id=\"preview\" visible=\"false\">\n\t\t\t\t\t\t\t\t\t<layoutData><l:SplitterLayoutData size=\"350px\"/></layoutData>\n\t\t\t\t\t\t\t\t\t<l:VerticalLayout width=\"100%\" class=\"sapUiContentPadding\">\n\t\t\t\t\t\t\t\t\t\t<Panel id=\"previewCopy\" headerText=\"{i18n>previewCopyTitle}\" class=\"previewCopy\">\n\t\t\t\t\t\t\t\t\t\t\t<l:FixFlex fixFirst=\"false\" vertical=\"false\">\n\t\t\t\t\t\t\t\t\t\t\t\t<l:flexContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"previewCopyCode\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teditable=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"sap-icon://{name}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapUiCopyCode\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:flexContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:fixContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon=\"sap-icon://copy\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"Emphasized\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip=\"{i18n>previewCopyToClipboard}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress=\"onCopyCodeToClipboard\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapUiTinyMarginBegin\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:fixContent>\n\t\t\t\t\t\t\t\t\t\t\t</l:FixFlex>\n\t\t\t\t\t\t\t\t\t\t\t<l:FixFlex fixFirst=\"false\" vertical=\"false\">\n\t\t\t\t\t\t\t\t\t\t\t\t<l:flexContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormattedText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"previewCopyIcon\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thtmlText=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapUiCopyIcon sapMInputBaseReadonlyInner\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:flexContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:fixContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon=\"sap-icon://copy\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"Emphasized\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip=\"{i18n>previewCopyToClipboard}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress=\"onCopyIconToClipboard\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapUiTinyMarginBegin\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:fixContent>\n\t\t\t\t\t\t\t\t\t\t\t</l:FixFlex>\n\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t<Panel headerText=\"{i18n>previewIconTitle}\" backgroundDesign=\"Solid\" class=\"sapUiContentPadding\">\n\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayout\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"centeredBlockCells\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground=\"Accent\">\n\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutRow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<core:Icon id=\"previewIcon\" src=\"sap-icon://{name}\" class=\"previewIcon\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutRow>\n\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayout>\n\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t<Panel id=\"previewUseCases\" headerText=\"{i18n>previewUseCasesTitle}\">\n\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayout\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"useCaseLayout\"\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"centeredBlockCells\"\n\t\t\t\t\t\t\t\t\t\t\t\tbackground=\"Accent\">\n\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutRow>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\" text=\"Button\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\" text=\"Button\" type=\"Accept\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\" text=\"Button\" type=\"Reject\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\" text=\"Button\" type=\"Emphasized\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OverflowToolbar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"previewToolbar\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesign=\"Solid\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapContrast sapContrastPlus\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label text=\"Toolbar\" class=\"sapUiTinyMarginBegin\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\" type=\"Accept\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\" type=\"Reject\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://{name}\" type=\"Emphasized\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StandardListItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"previewListItem\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"List Item\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription=\"sap-icon://{name}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon=\"sap-icon://{name}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinfoState=\"Warning\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thighlight=\"Warning\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconTabBar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"previewIconTabBar\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texpanded=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texpandable=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theaderBackgroundDesign=\"Solid\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedKey=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapUiNoContentPadding semiTransparentITB\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconTabFilter icon=\"sap-icon://{name}\" key=\"1\" class=\"\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconTabFilter icon=\"sap-icon://{name}\" key=\"1\" iconColor=\"Positive\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconTabFilter icon=\"sap-icon://{name}\" key=\"1\" iconColor=\"Critical\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconTabFilter icon=\"sap-icon://{name}\" key=\"1\" iconColor=\"Negative\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label text=\"IconTabBar\" class=\"sapUiTinyMargin\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconTabBar>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<GenericTile\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"previewGenericTile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theader=\"GenericTile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"previewGenericTile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubheader=\"with Icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tileContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TileContent footer=\"Footer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NumericContent\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"42\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscale=\"EUR\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueColor=\"Neutral\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindicator=\"Up\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate=\"Loaded\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon=\"sap-icon://{name}\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</TileContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tileContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</GenericTile>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<f:Avatar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"sap-icon://{name}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplaySize=\"L\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapUiTinyMarginBottom\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Text width=\"100%\" textAlign=\"Center\" text=\"Avatar\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutCell>\n\t\t\t\t\t\t\t\t\t\t\t</l:BlockLayoutRow>\n\t\t\t\t\t\t\t\t\t\t</l:BlockLayout>\n\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t<Panel id=\"previewInfo\" headerText=\"{i18n>previewInfoTitle}\">\n\t\t\t\t\t\t\t\t\t\t<ObjectAttribute id=\"unicodeInfo\" title=\"{i18n>previewInfoUnicode}\" text=\"?\"/>\n\t\t\t\t\t\t\t\t\t\t<ObjectAttribute title=\"{i18n>previewInfoCSSClass}\" text=\"icon-{name}\"/>\n\t\t\t\t\t\t\t\t\t\t<ObjectAttribute id=\"categoryInfo\" title=\"{i18n>previewInfoCategory}\" text=\"?\"/>\n\t\t\t\t\t\t\t\t\t\t<ObjectAttribute title=\"{i18n>previewInfoTag}\"/>\n\t\t\t\t\t\t\t\t\t\t<Tokenizer\n\t\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\t\ttokens=\"{\n\t\t\t\t\t\t\t\t\t\t\t\tpath: 'tags',\n\t\t\t\t\t\t\t\t\t\t\t\ttemplateShareable: true\n\t\t\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\t\t\teditable=\"false\">\n\t\t\t\t\t\t\t\t\t\t\t<Token text=\"{name}\" press=\"onTagSelect\"/>\n\t\t\t\t\t\t\t\t\t\t</Tokenizer>\n\t\t\t\t\t\t\t\t\t</Panel>\n\n\t\t\t\t\t\t\t\t\t</l:VerticalLayout>\n\t\t\t\t\t\t\t</ScrollContainer>\n\t\t\t\t\t\t</l:SplitPane>\n\t\t\t\t\t</l:PaneContainer>\n\t\t\t\t</l:ResponsiveSplitter>\n\t\t\t\t</content>\n\t\t\t</IconTabBar>\n\t\t</semantic:content>\n\n\t\t<semantic:customHeaderContent>\n\t\t\t<Button\n\t\t\t\tid=\"surprise\"\n\t\t\t\tvisible=\"{= ${device>/system/phone} ? false : true}\"\n\t\t\t\ttext=\"{i18n>overviewRandomIconButtonTitle}\"\n\t\t\t\ttooltip=\"{i18n>overviewRandomIconButtonTooltip}\"\n\t\t\t\ticon=\"sap-icon://activate\"\n\t\t\t\tpress=\"onSurpriseMe\"/>\n\t\t</semantic:customHeaderContent>\n\n\t</semantic:FullscreenPage>\n\n</mvc:View>",
		"sap/ui/demo/iconexplorer/i18n/i18n.properties": "# This is the resource bundle for the icon explorer\n\n#XTIT: Application name\nappTitle=Icon Explorer\n\n#YDES: Application description\nappDescription=App to explore all icons of the SAPUI5 icon font\n\n#~~~ Overview View ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n#XTIT: Initial count for the \"all\" tab\noverviewTabAllInitial=All\n\n#XTIT: Title for the \"all\" tab\noverviewTabAllText=Icons\n\n#XTIT: Title for the \"details\" tab\noverviewTabDetailsText=Details\n\n#XTIT: Title for the \"grid\" tab\noverviewTabGridText=Grid\n\n#XTIT: Title for the \"visual\" tab\noverviewTabVisualText=Visual\n\n#XTIT: Title for the \"favorites\" tab\noverviewTabFavoritesText=Favorites\n\n#XTOL: Tooltip for the \"all\" tab\noverviewTabAllTooltip=Return to the full set of all icons for the selected category, discarding all selected filters and tags\n\n#XTOL: Tooltip for the \"details\" tab\noverviewTabDetailsTooltip=List the icons in a table, showing tags and additional details\n\n#XTOL: Tooltip for the \"grid\" tab\noverviewTabGridTooltip=Preview all icons in a compact grid\n\n#XTOL: Tooltip for the \"visual\" tab\noverviewTabVisualTooltip=Check how the icons look in different sizes\n\n#XTOL: Tooltip for the \"favorites\" tab\noverviewTabFavoritesTooltip=List the icons you marked as favorites\n\n#XTIT: Table view title\noverviewViewTitle=Icon Explorer\n\n#XBUT: Title for the random icon button\noverviewRandomIconButtonTitle=Surprise me!\n\n#XTOL: Tooltip for the random icon button\noverviewRandomIconButtonTooltip=Show a random icon in the preview pane\n\n#XTOL: Tooltip for the search field\noverviewSearchTooltip=Enter an icon name or a keyword\n\n#XTOL: Tooltip for the category selection\noverviewSelectCategoryTooltip=Select a category\n\n#XTIT: Label for the tag selection bar\noverviewTagSelectionLabel=Tags:\n\n#XTTOL: Tooltip for the tag selection label\noverviewSelectTagsTooltip=Use tags to filter the list\n\n#XBLI: text for a table with no data with filter or search\noverviewNoDataWithSearchText=No matching icons found\n\n#XTIT: The title of the column containing the Icon\ntableIconColumnTitle=Icon\n\n#XTIT: The title of the column containing the Name\ntableNameColumnTitle=Name\n\n#XTIT: The title of the column containing the Code\ntableCodeColumnTitle=Code\n\n#XTIT: The title of the column containing the Tags\ntableTagsColumnTitle=Tags\n\n#XBLI: text for a table with no data\noverviewNoDataText=No icons are currently available\n\n#XLNK: text for link in 'not found' pages\nbackToOverview=Show Icons\n\n#XBUT: text for the code radio button\npreviewCopyCode=Code\n\n#XBUT: text for the icon radio button\npreviewCopyIcon=Icon\n\n#XTIT: title of the preview icon section\npreviewIconTitle=Preview\n\n#XTIT: title of the preview use cases section\npreviewUseCasesTitle=Typical Use Cases\n\n#XTIT: title of the preview info section\npreviewInfoTitle=Additional Information\n\n#XTIT: text of the unicode information label\npreviewInfoUnicode=Unicode\n\n#XTIT: text of the CSS class information label\npreviewInfoCSSClass=CSS Class\n\n#XTIT: text of the category information label\npreviewInfoCategory=Categories\n\n#XTIT: text of the tags information label\npreviewInfoTag=Tags\n\n#XTIT: title of the preview copy section\npreviewCopyTitle=Copy\n\n#TOL: tooltip for copy icon code button\npreviewCopyCodeToClipboard=Copy icon code to clipboard\n\n#TOL: tooltip for copy character button\npreviewCopyIconToClipboard=Copy icon to clipboard\n\n#YMSG: success message for copying an icon to clipboard\npreviewCopyToClipboardSuccess=Icon {0} copied to clipboard\n\n#YMSG: error message for copying an icon to clipboard\npreviewCopyToClipboardFail=Icon {0} could not be copied to clipboard\n\n#YMSG: message for adding an icon to favorites\noverviewFavoriteAdd=Icon {0} added to your favorites\n\n#YMSG: message for removing an icon from favorites\noverviewFavoriteRemove=Icon {0} removed from your favorites\n\n#~~~ Not Found View ~~~~~~~~~~~~~~~~~~~~~~~\n\n#XTIT: Not found view title\nnotFoundTitle=Not Found\n\n#YMSG: The not found text is displayed when there was an error loading the resource (404 error)\nnotFoundText=The requested resource was not found\n\n#~~~ Error Handling ~~~~~~~~~~~~~~~~~~~~~~~\n\n#YMSG: Error dialog description\nerrorText=Sorry, that's some technical error. Please try again later.",
		"sap/ui/demo/iconexplorer/i18n/i18n_en.properties": "# This is the resource bundle for the icon explorer\r\n\r\n#XTIT: Application name\r\nappTitle=Icon Explorer\r\n\r\n#YDES: Application description\r\nappDescription=App to explore all icons of the SAPUI5 icon font\r\n\r\n#~~~ Overview View ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#XTIT: Initial count for the \"all\" tab\r\noverviewTabAllInitial=All\r\n\r\n#XTIT: Title for the \"all\" tab\r\noverviewTabAllText=Icons\r\n\r\n#XTIT: Title for the \"details\" tab\r\noverviewTabDetailsText=Details\r\n\r\n#XTIT: Title for the \"grid\" tab\r\noverviewTabGridText=Grid\r\n\r\n#XTIT: Title for the \"visual\" tab\r\noverviewTabVisualText=Visual\r\n\r\n#XTIT: Title for the \"favorites\" tab\r\noverviewTabFavoritesText=Favorites\r\n\r\n#XTOL: Tooltip for the \"all\" tab\r\noverviewTabAllTooltip=Return to the full set of all icons for the selected category, discarding all selected filters and tags\r\n\r\n#XTOL: Tooltip for the \"details\" tab\r\noverviewTabDetailsTooltip=List the icons in a table, showing tags and additional details\r\n\r\n#XTOL: Tooltip for the \"grid\" tab\r\noverviewTabGridTooltip=Preview all icons in a compact grid\r\n\r\n#XTOL: Tooltip for the \"visual\" tab\r\noverviewTabVisualTooltip=Check how the icons look in different sizes\r\n\r\n#XTOL: Tooltip for the \"favorites\" tab\r\noverviewTabFavoritesTooltip=List the icons you marked as favorites\r\n\r\n#XTIT: Table view title\r\noverviewViewTitle=Icon Explorer\r\n\r\n#XBUT: Title for the download iconfont button\r\noverviewDownloadButtonTitle=Download\r\n\r\n#XTOOL: Tooltip for the random icon button\r\noverviewDownloadButtonTooltip=Download icon font with all shown icons\r\n\r\n#XBUT: Title for the random icon button\r\noverviewRandomIconButtonTitle=Surprise me!\r\n\r\n#XTOL: Tooltip for the random icon button\r\noverviewRandomIconButtonTooltip=Show a random icon in the preview pane\r\n\r\n#XTOL: Tooltip for the search field\r\noverviewSearchTooltip=Enter an icon name or a keyword\r\n\r\n#XTOL: Tooltip for the category selection\r\noverviewSelectCategoryTooltip=Select a category\r\n\r\n#XTIT: Label for the tag selection bar\r\noverviewTagSelectionLabel=Tags:\r\n\r\n#XTTOL: Tooltip for the tag selection label\r\noverviewSelectTagsTooltip=Use tags to filter the list\r\n\r\n#XBLI: text for a table with no data with filter or search\r\noverviewNoDataWithSearchText=No matching icons found\r\n\r\n#XTIT: The title of the column containing the Icon\r\ntableIconColumnTitle=Icon\r\n\r\n#XTIT: The title of the column containing the Name\r\ntableNameColumnTitle=Name\r\n\r\n#XTIT: The title of the column containing the Code\r\ntableCodeColumnTitle=Code\r\n\r\n#XTIT: The title of the column containing the Tags\r\ntableTagsColumnTitle=Tags\r\n\r\n#XBLI: text for a table with no data\r\noverviewNoDataText=No icons are currently available\r\n\r\n#XLNK: text for link in 'not found' pages\r\nbackToOverview=Show Icons\r\n\r\n#XBUT: text for the code radio button\r\npreviewCopyCode=Code\r\n\r\n#XBUT: text for the icon radio button\r\npreviewCopyIcon=Icon\r\n\r\n#XTIT: title of the preview icon section\r\npreviewIconTitle=Preview\r\n\r\n#XTIT: title of the preview use cases section\r\npreviewUseCasesTitle=Typical Use Cases\r\n\r\n#XTIT: title of the preview info section\r\npreviewInfoTitle=Additional Information\r\n\r\n#XTIT: text of the unicode information label\r\npreviewInfoUnicode=Unicode\r\n\r\n#XTIT: text of the CSS class information label\r\npreviewInfoCSSClass=CSS Class\r\n\r\n#XTIT: text of the category information label\r\npreviewInfoCategory=Categories\r\n\r\n#XTIT: text of the tags information label\r\npreviewInfoTag=Tags\r\n\r\n#TOL: tooltip for the copy button\r\npreviewCopyToClipboard=Copy selected icon to clipboard\r\n\r\n#YMSG: success message for copying an icon to clipboard\r\npreviewCopyToClipboardSuccess=Icon {0} copied to clipboard\r\n\r\n#YMSG: error message for copying an icon to clipboard\r\npreviewCopyToClipboardFail=Icon {0} could not be copied to clipboard\r\n\r\n#YMSG: message for adding an icon to favorites\r\noverviewFavoriteAdd=Icon {0} added to your favorites\r\n\r\n#YMSG: message for removing an icon from favorites\r\noverviewFavoriteRemove=Icon {0} removed from your favorites\r\n\r\n#~~~ Not Found View ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#XTIT: Not found view title\r\nnotFoundTitle=Not Found\r\n\r\n#YMSG: The not found text is displayed when there was an error loading the resource (404 error)\r\nnotFoundText=The requested resource was not found\r\n\r\n#~~~ Error Handling ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#YMSG: Error dialog description\r\nerrorText=Sorry, that's some technical error. Please try again later.",
		"sap/ui/demo/iconexplorer/i18n/i18n_en_US.properties": "# This is the resource bundle for the icon explorer\r\n\r\n#XTIT: Application name\r\nappTitle=Icon Explorer\r\n\r\n#YDES: Application description\r\nappDescription=App to explore all icons of the SAPUI5 icon font\r\n\r\n#~~~ Overview View ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#XTIT: Initial count for the \"all\" tab\r\noverviewTabAllInitial=All\r\n\r\n#XTIT: Title for the \"all\" tab\r\noverviewTabAllText=Icons\r\n\r\n#XTIT: Title for the \"details\" tab\r\noverviewTabDetailsText=Details\r\n\r\n#XTIT: Title for the \"grid\" tab\r\noverviewTabGridText=Grid\r\n\r\n#XTIT: Title for the \"visual\" tab\r\noverviewTabVisualText=Visual\r\n\r\n#XTIT: Title for the \"favorites\" tab\r\noverviewTabFavoritesText=Favorites\r\n\r\n#XTOL: Tooltip for the \"all\" tab\r\noverviewTabAllTooltip=Return to the full set of all icons for the selected category, discarding all selected filters and tags\r\n\r\n#XTOL: Tooltip for the \"details\" tab\r\noverviewTabDetailsTooltip=List the icons in a table, showing tags and additional details\r\n\r\n#XTOL: Tooltip for the \"grid\" tab\r\noverviewTabGridTooltip=Preview all icons in a compact grid\r\n\r\n#XTOL: Tooltip for the \"visual\" tab\r\noverviewTabVisualTooltip=Check how the icons look in different sizes\r\n\r\n#XTOL: Tooltip for the \"favorites\" tab\r\noverviewTabFavoritesTooltip=List the icons you marked as favorites\r\n\r\n#XTIT: Table view title\r\noverviewViewTitle=Icon Explorer\r\n\r\n#XBUT: Title for the download iconfont button\r\noverviewDownloadButtonTitle=Download\r\n\r\n#XTOOL: Tooltip for the random icon button\r\noverviewDownloadButtonTooltip=Download icon font with all shown icons\r\n\r\n#XBUT: Title for the random icon button\r\noverviewRandomIconButtonTitle=Surprise me!\r\n\r\n#XTOL: Tooltip for the random icon button\r\noverviewRandomIconButtonTooltip=Show a random icon in the preview pane\r\n\r\n#XTOL: Tooltip for the search field\r\noverviewSearchTooltip=Enter an icon name or a keyword\r\n\r\n#XTOL: Tooltip for the category selection\r\noverviewSelectCategoryTooltip=Select a category\r\n\r\n#XTIT: Label for the tag selection bar\r\noverviewTagSelectionLabel=Tags:\r\n\r\n#XTTOL: Tooltip for the tag selection label\r\noverviewSelectTagsTooltip=Use tags to filter the list\r\n\r\n#XBLI: text for a table with no data with filter or search\r\noverviewNoDataWithSearchText=No matching icons found\r\n\r\n#XTIT: The title of the column containing the Icon\r\ntableIconColumnTitle=Icon\r\n\r\n#XTIT: The title of the column containing the Name\r\ntableNameColumnTitle=Name\r\n\r\n#XTIT: The title of the column containing the Code\r\ntableCodeColumnTitle=Code\r\n\r\n#XTIT: The title of the column containing the Tags\r\ntableTagsColumnTitle=Tags\r\n\r\n#XBLI: text for a table with no data\r\noverviewNoDataText=No icons are currently available\r\n\r\n#XLNK: text for link in 'not found' pages\r\nbackToOverview=Show Icons\r\n\r\n#XBUT: text for the code radio button\r\npreviewCopyCode=Code\r\n\r\n#XBUT: text for the icon radio button\r\npreviewCopyIcon=Icon\r\n\r\n#XTIT: title of the preview icon section\r\npreviewIconTitle=Preview\r\n\r\n#XTIT: title of the preview use cases section\r\npreviewUseCasesTitle=Typical Use Cases\r\n\r\n#XTIT: title of the preview info section\r\npreviewInfoTitle=Additional Information\r\n\r\n#XTIT: text of the unicode information label\r\npreviewInfoUnicode=Unicode\r\n\r\n#XTIT: text of the CSS class information label\r\npreviewInfoCSSClass=CSS Class\r\n\r\n#XTIT: text of the category information label\r\npreviewInfoCategory=Categories\r\n\r\n#XTIT: text of the tags information label\r\npreviewInfoTag=Tags\r\n\r\n#TOL: tooltip for the copy button\r\npreviewCopyToClipboard=Copy selected icon to clipboard\r\n\r\n#YMSG: success message for copying an icon to clipboard\r\npreviewCopyToClipboardSuccess=Icon {0} copied to clipboard\r\n\r\n#YMSG: error message for copying an icon to clipboard\r\npreviewCopyToClipboardFail=Icon {0} could not be copied to clipboard\r\n\r\n#YMSG: message for adding an icon to favorites\r\noverviewFavoriteAdd=Icon {0} added to your favorites\r\n\r\n#YMSG: message for removing an icon from favorites\r\noverviewFavoriteRemove=Icon {0} removed from your favorites\r\n\r\n#~~~ Not Found View ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#XTIT: Not found view title\r\nnotFoundTitle=Not Found\r\n\r\n#YMSG: The not found text is displayed when there was an error loading the resource (404 error)\r\nnotFoundText=The requested resource was not found\r\n\r\n#~~~ Error Handling ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#YMSG: Error dialog description\r\nerrorText=Sorry, that's some technical error. Please try again later.",
		"sap/ui/demo/iconexplorer/openui5test/messagebundle.properties": "#This is the resource bundle for the sap.ui.core library\r\n#__ldi.translation.uuid=79738ed0-fe50-11e0-be50-0800200c9a66\r\n\r\n#NOTR\r\nSAPUI5_FRIDAY=Friday\r\n#NOTR\r\nSAPUI5_GM_ZSTEP=Zoom step {0}\r\n\r\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have an error\r\nVALUE_STATE_ERROR=Invalid entry\r\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have a warning\r\nVALUE_STATE_WARNING=Warning issued\r\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to be in success state\r\nVALUE_STATE_SUCCESS=Entry successfully validated\r\n\r\n#XTOL: text that could be show if BusyIndicator is active\r\nBUSY_TEXT=Please wait\r\n\r\n#########\r\n# Texts for sap.ui.core.format.DateFormat\r\n#########\r\n\r\n#XTXT: the long pattern for formatting a date using calendar week number\r\ndate.week.calendarweek.wide=Calendar Week {0}\r\n#XTXT: the short pattern for formatting a date using calendar week number\r\ndate.week.calendarweek.narrow=CW {0}\r\n\r\n#########\r\n# Texts for sap.ui.core.format.FileSizeFormat\r\n#########\r\n\r\n#YMSG,20: File Size Unit one Byte\r\nFileSize.Byte={0} Byte\r\n#YMSG,20: File Size Unit Bytes\r\nFileSize.Bytes={0} Bytes\r\n\r\n#YMSG,20: File Size Unit Kilobyte (short)\r\nFileSize.Kilobyte={0} KB\r\n#YMSG,20: File Size Unit Megabyte (short)\r\nFileSize.Megabyte={0} MB\r\n#YMSG,20: File Size Unit Gigabyte (short)\r\nFileSize.Gigabyte={0} GB\r\n#YMSG,20: File Size Unit Terabyte (short)\r\nFileSize.Terabyte={0} TB\r\n#YMSG,20: File Size Unit Petabyte (short)\r\nFileSize.Petabyte={0} PB\r\n#YMSG,20: File Size Unit Exabyte (short)\r\nFileSize.Exabyte={0} EB\r\n#YMSG,20: File Size Unit Zettabyte (short)\r\nFileSize.Zettabyte={0} ZB\r\n#YMSG,20: File Size Unit Yottabyte (short)\r\nFileSize.Yottabyte={0} YB\r\n\r\n#YMSG,20: File Size Unit Kibibyte (short)\r\nFileSize.Kibibyte={0} KiB\r\n#YMSG,20: File Size Unit Mebibyte (short)\r\nFileSize.Mebibyte={0} MiB\r\n#YMSG,20: File Size Unit Gibibyte (short)\r\nFileSize.Gibibyte={0} GiB\r\n#YMSG,20: File Size Unit Tebibyte (short)\r\nFileSize.Tebibyte={0} TiB\r\n#YMSG,20: File Size Unit Pebibyte (short)\r\nFileSize.Pebibyte={0} PiB\r\n#YMSG,20: File Size Unit Exbibyte (short)\r\nFileSize.Exbibyte={0} EiB\r\n#YMSG,20: File Size Unit Zebibyte (short)\r\nFileSize.Zebibyte={0} ZiB\r\n#YMSG,20: File Size Unit Yobibyte (short)\r\nFileSize.Yobibyte={0} YiB\r\n\r\n#########\r\n# Texts for sap.ui.model.odata.AnnotationHelper\r\n#########\r\n\r\n#XTOL: mathematical term for a number greater than anything else\r\nINFINITY=Infinity\r\n#XTOL: mathematical term for a number smaller than anything else\r\nMINUS_INFINITY=Minus infinity\r\n#XTOL\r\nNAN=Not a number\r\n\r\n#########\r\n# Texts for sap.ui.model.odata.type.*\r\n#########\r\n\r\n#XTOL: No\r\nNO=No\r\n#XTOL: Yes\r\nYES=Yes\r\n#YMSG: Enter \"{0}\" or \"{1}\"\r\nEnterYesOrNo=Enter \"{0}\" or \"{1}\".\r\n#YMSG: Enter only digits\r\nEnterDigitsOnly=Enter only digits\r\n#YMSG: Enter a maximum of {0} digits\r\nEnterMaximumOfDigits=Enter a maximum of {0} digits.\r\n#YMSG: Enter a number\r\nEnterNumber=Enter a number\r\n#YMSG: Enter a number with a maximum of {0} digits, including any decimal places\r\nEnterNumberPrecision=Enter a number with a maximum of {0} digits, including any decimal places\r\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator\r\nEnterNumberInteger=Enter a number with a maximum of {0} digits to the left of the decimal separator\r\n#YMSG: Enter a number with a maximum of {0} decimal places\r\nEnterNumberFraction=Enter a number with a maximum of {0} decimal places\r\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\r\nEnterNumberIntegerFraction=Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\r\n#YMSG: Enter a number with a minimum value of {0}\r\nEnterNumberMin=Enter a number with a minimum value of {0}\r\n#YMSG: Enter a number greater than {0}\r\nEnterNumberMinExclusive=Enter a number greater than {0}\r\n#YMSG: Enter a number with a maximum value of {0}\r\nEnterNumberMax=Enter a number with a maximum value of {0}\r\n#YMSG: Enter a number less than {0}\r\nEnterNumberMaxExclusive=Enter a number less than {0}\r\n#YMSG: Enter a text\r\nEnterText=Enter a text\r\n#YMSG: Enter a text with a maximum of {0} characters and spaces\r\nEnterTextMaxLength=Enter a text with a maximum of {0} characters and spaces\r\n#YMSG: Enter a number with no decimal places\r\nEnterInt=Enter a number with no decimal places\r\n#YMSG: Enter a valid date and a valid time in the following format\\: {0}\r\nEnterDateTime=Enter a valid date and a valid time in the following format\\: {0}\r\n#YMSG: Enter a valid date in the following format\\: {0}\r\nEnterDate=Enter a valid date in the following format\\: {0}\r\n#YMSG: Enter a GUID in the following format\\: 12345678-90AB-CDEF-1234-567890ABCDEF\r\nEnterGuid=Enter a GUID in the following format\\: 12345678-90AB-CDEF-1234-567890ABCDEF\r\n#YMSG: Enter a valid time in the following format\\: {0}\r\nEnterTime=Enter a valid time in the following format\\: {0}\r\n\r\n#########\r\n# Texts for sap.ui.model.type.*\r\n#########\r\n\r\n#YMSG,100: Enter a valid boolean\r\nBoolean.Invalid=Enter a valid Boolean value\r\n\r\n#YMSG,100: Enter a valid number\r\nInteger.Invalid=Enter a valid number\r\n#YMSG,100: Enter a number greater than or equal to {0}\r\nInteger.Minimum=Enter a number greater than or equal to {0}\r\n#YMSG,100: Enter a number lower than or equal to {0}\r\nInteger.Maximum=Enter a number less than or equal to {0}\r\n\r\n#YMSG,100: Enter a valid number.\r\nFloat.Invalid=Enter a valid number\r\n#YMSG,100: Enter a number greater than or equal to {0}\r\nFloat.Minimum=Enter a number greater than or equal to {0}\r\n#YMSG,100: Enter a number lower than or equal to {0}\r\nFloat.Maximum=Enter a number less than or equal to {0}\r\n\r\n#YMSG,100: Enter a valid currency amount\r\nCurrency.Invalid=Enter a valid currency amount\r\n#YMSG,100: Enter an amount greater than or equal to {0}\r\nCurrency.Minimum=Enter an amount greater than or equal to {0}\r\n#YMSG,100: Enter an amount lower than or equal to {0}\r\nCurrency.Maximum=Enter an amount less than or equal to {0}\r\n\r\n#YMSG,100: Enter a valid file size\r\nFileSize.Invalid=Enter a valid file size\r\n#YMSG,100: EEnter a file size greater than or equal to {0}\r\nFileSize.Minimum=Enter a file size greater than or equal to {0}\r\n#YMSG,100: Enter a file size lower than or equal to {0}\r\nFileSize.Maximum=Enter a file size lower than or equal to {0}\r\n\r\n#YMSG,100: Enter a valid date\r\nDate.Invalid=Enter a date\r\n#YMSG,100: Enter a date after {0}\r\nDate.Minimum=Enter a date after {0}\r\n#YMSG,100: Enter a date before {0}\r\nDate.Maximum=Enter a date before {0}\r\n\r\n#YMSG,100: Enter a valid time\r\nTime.Invalid=Enter a valid time\r\n#YMSG,100: Enter a time after {0}\r\nTime.Minimum=Enter a time after {0}\r\n#YMSG,100: Enter a time before {0}\r\nTime.Maximum=Enter a time before {0}\r\n\r\n#YMSG,100: Enter a valid date and time\r\nDateTime.Invalid=Enter a valid date and time\r\n#YMSG,100: Enter a date and time after {0}\r\nDateTime.Minimum=Enter a date and time after {0}\r\n#YMSG,100: Enter a date and time before {0}\r\nDateTime.Maximum=Enter a date and time before {0}\r\n\r\n#YMSG,100: Enter a valid date interval\r\nDateInterval.Invalid=Enter a valid date interval\r\n\r\n#YMSG,100: Enter a value with at least {0} characters\r\nString.MinLength=Enter a value with at least {0} characters\r\n#YMSG,100: Enter a value with no more than {0} characters\r\nString.MaxLength=Enter a value with no more than {0} characters\r\n#YMSG,100: Enter a value starting with \"{0}\"\r\nString.StartsWith=Enter a value starting with \"{0}\"\r\n#YMSG,100: Enter a value ending with \"{0}\"\r\nString.EndsWith=Enter a value ending with \"{0}\"\r\n#YMSG,100: Enter a value containing \"{0}\"\r\nString.Contains=Enter a value containing \"{0}\"\r\n#YMSG,100: Enter value \"{0}\"\r\nString.Equals=Enter value \"{0}\"\r\n#YMSG,100: Enter a value matching \"{0}\"\r\nString.Search=Enter a value matching \"{0}\"\r\n\r\n#XACT: ARIA announcement for the MessageStrip's \"Error\" state\r\nMESSAGE_STRIP_ERROR=Message Strip Error\r\n#XACT: ARIA announcement for the MessageStrip's \"Warning\" state\r\nMESSAGE_STRIP_WARNING=Message Strip Warning\r\n#XACT: ARIA announcement for the MessageStrip's \"Success\" state\r\nMESSAGE_STRIP_SUCCESS=Message Strip Success\r\n#XACT: ARIA announcement for the MessageStrip's \"Information\" state\r\nMESSAGE_STRIP_INFORMATION=Message Strip Information\r\n#XACT: ARIA announcement for the MessageStrip's closable state\r\nMESSAGE_STRIP_CLOSABLE=Closable\r\n\r\n#XACT: type of an UI control is an image\r\nACC_CTR_TYPE_IMAGE=Image\r\n#XACT: type of an UI control is a button\r\nACC_CTR_TYPE_BUTTON=Button\r\n\r\n#XFLD: Close\r\nCLOSE=Close\r\n\r\n#########\r\n# Texts for sap-icon Font\r\n#\r\n# Update \"sap.ui.core.IconPool\" (mIconI18nKey)\r\n# when adding a new key here\r\n#########\r\n\r\n#XTXT\r\nIcon.action-settings=Settings\r\n#XTXT\r\nIcon.activate=Activate\r\n#XTXT\r\nIcon.add=Add\r\n#XTXT\r\nIcon.add-contact=Add Contact\r\n#XTXT\r\nIcon.add-filter=Add Filter\r\n#XTXT\r\nIcon.add-photo=Add Photo\r\n#XTXT\r\nIcon.back-to-top=Back to Top\r\n#XTXT\r\nIcon.collapse=Collapse\r\n#XTXT\r\nIcon.collapse-group=Collapse Group\r\n#XTXT: Crop parts of an image\r\nIcon.crop=Crop\r\n#XTXT: To decline an offer\r\nIcon.decline=Decline\r\n#XTXT\r\nIcon.delete=Delete\r\n#XTXT\r\nIcon.display=Display\r\n#XTXT\r\nIcon.down=Down\r\n#XTXT\r\nIcon.download=Download\r\n#XTXT\r\nIcon.drill-down=Drill Down\r\n#XTXT\r\nIcon.drill-up=Drill Up\r\n#XTXT\r\nIcon.error=Error\r\n#XTXT\r\nIcon.exit-full-screen=Exit Full Screen\r\n#XTXT\r\nIcon.expand=Expand\r\n#XTXT\r\nIcon.expand-group=Expand Group\r\n#XTXT: Action to filter on a group of elements\r\nIcon.filter=Filter\r\n#XTXT: To flag or mark an item\r\nIcon.flag=Flag\r\n#XTXT: To forward an item to a recipients\r\nIcon.forward=Forward\r\n#XTXT\r\nIcon.full-screen=Enter Full Screen\r\n#XTXT\r\nIcon.generate-shortcut=Create Shortcut\r\n#XTXT: To group items\r\nIcon.group-2=Group\r\n#XTXT: To hide an element from display\r\nIcon.hide=Hide\r\n#XTXT\r\nIcon.ipad=Tablet\r\n#XTXT\r\nIcon.ipad-2=Tablet\r\n#XTXT\r\nIcon.iphone=Phone\r\n#XTXT\r\nIcon.iphone-2=Phone\r\n#XTXT\r\nIcon.laptop=Laptop\r\n#XTXT\r\nIcon.message-error=Error\r\n#XTXT\r\nIcon.message-information=Information\r\n#XTXT\r\nIcon.message-success=Successful\r\n#XTXT\r\nIcon.message-warning=Warning\r\n#XTXT: To manipulate the position of an element\r\nIcon.move=Move\r\n#XTXT\r\nIcon.multi-select=Multi Select\r\n#XTXT\r\nIcon.nav-back=Navigate Back\r\n#XTXT\r\nIcon.overflow=More\r\n#XTXT\r\nIcon.redo=Redo\r\n#XTXT\r\nIcon.refresh=Refresh\r\n#XTXT\r\nIcon.resize=Resize\r\n#XTXT\r\nIcon.resize-horizontal=Resize Horizontally\r\n#XTXT\r\nIcon.resize-vertical=Resize Vertically\r\n#XTXT\r\nIcon.response=Reply\r\n#XTXT\r\nIcon.save=Save\r\n#XTXT\r\nIcon.search=Search\r\n#XTXT\r\nIcon.settings=Settings\r\n#XTXT: To show an element previously hidden\r\nIcon.show=Show\r\n#XTXT\r\nIcon.sort=Sort\r\n#XTXT\r\nIcon.sort-ascending=Sort Ascending\r\n#XTXT\r\nIcon.sort-descending=Sort Descending\r\n#XTXT\r\nIcon.synchronize=Synchronize\r\n#XTXT\r\nIcon.undo=Undo\r\n#XTXT\r\nIcon.up=Up\r\n#XTXT\r\nIcon.upload=Upload\r\n#XTXT\r\nIcon.zoom-in=Zoom In\r\n#XTXT\r\nIcon.zoom-out=Zoom Out\r\n\r\n#########\r\n# Texts for sap.ui.debug.TechnicalInfo\r\n#########\r\n\r\n#XTIT: Title for the technical information dialog\r\nTechInfo.DialogTitle=Technical Information Dialog\r\n\r\n#XTOL: Tooltip for info button in header\r\nTechInfo.HelpButton.Tooltip=Open documentation\r\n\r\n#XTOL: Tooltip for version information link\r\nTechInfo.VersionLink.Tooltip=Open version information in a new tab\r\n\r\n#XTOL: Tooltip for copy to clipboard button\r\nTechInfo.CopyButton.Tooltip=Copy technical information to clipboard\r\n\r\n#XBUT: SAPUI5 Diagnostics button text\r\nTechnInfo.DiagnosticsButton.Text=Open Diagnostics\r\n\r\n#XBUT: Support assistant button text\r\nTechnInfo.AssistantButton.Text=Activate Support Assistant\r\n\r\n#XFLD: User agent field label\r\nTechInfo.UserAgent.Label=User Agent\r\n\r\n#XFLD: Application URL label\r\nTechInfo.AppUrl.Label=App URL\r\n\r\n#XFLD: Debug sources label\r\nTechInfo.DebugSources.Label=Use Debug Sources\r\n\r\n#XTOL: Debug sources tooltip\r\nTechInfo.DebugSources.Tooltip=Reloads the current page with unminified sources for debugging\r\n\r\n#XLNK: Debug sources select packages link\r\nTechInfo.DebugSourcesModules.Link=Select specific modules\r\n\r\n#XFLD: Text for the version build time string\r\nTechInfo.VersionBuildTime.Text=(built at {0})\r\n\r\n#YMSG: success message for copying to clipboard\r\nTechInfo.CopyToClipboard.Success=Technical information copied to clipboard\r\n\r\n#YMSG: error message for copying to clipboard\r\nTechInfo.CopyToClipboard.Error=Technical information could not be copied to clipboard\r\n\r\n#XTIT: Confirmation title for enabling/disabling debug sources\r\nTechInfo.DebugSources.ConfirmTitle=Reload App\r\n\r\n#YMSG: Confirmation message for enabling/disabling debug sources\r\nTechInfo.DebugSources.ConfirmMessage=Reload the app to enable or disable the debug sources\r\n\r\n#XTIT: Title for the custom bootstrap UPL configuration popup\r\nTechInfo.SupportAssistantConfigPopup.Title=Support Assistant Settings\r\n\r\n#XFLD: Standard bootstrap locations option for the custom bootstrap UPL configuration popup\r\nTechInfo.SupportAssistantConfigPopup.StandardLocation=Recommended Locations\r\n\r\n#XFLD: Custom bootstrap location option for the custom bootstrap UPL configuration popup\r\nTechInfo.SupportAssistantConfigPopup.CustomLocation=Custom Location\r\n\r\n#XFLD: Application version bootstrap location option for the custom bootstrap UPL configuration popup\r\nTechInfo.SupportAssistantConfigPopup.AppVersionOption=Application Version ({0})\r\n\r\n#YMSG: Custom bootstrap location validation error message\r\nTechInfo.SupportAssistantConfigPopup.URLValidationMessage=Incorrect syntax of the location address. Correct syntax should be http://<Valid custom URI>/resources/sap/ui/support.\r\n\r\n#YMSG: Error message when support Assistant is not found\r\nTechInfo.SupportAssistantConfigPopup.SupportAssistantNotFound=Support Assistant is not available in this location:\r\n\r\n#YMSG: Error message when protocols did not match\r\nTechInfo.SupportAssistantConfigPopup.ProtocolError=App protocol does not match the Support Assistant protocol (HTTP/HTTPS)\r\n\r\n#YMSG: Error message when Ajax return code is different than [200]\r\nTechInfo.SupportAssistantConfigPopup.ErrorTryingToGetRecourse=Ajax return code is different than [200]\r\n\r\n#YMSG: Error message when file not Found [404]\r\nTechInfo.SupportAssistantConfigPopup.ErrorNotFound=Not Found [404]\r\n\r\n#YMSG: Error message when internal server error occurs\r\nTechInfo.SupportAssistantConfigPopup.InternalServerError=Internal Server Error [500]\r\n\r\n#YMSG: Error message when request timeout.\r\nTechInfo.SupportAssistantConfigPopup.ErrorOnTimeout=Time out error\r\n\r\n#YMSG: Error message when trying to parse JSON\r\nTechInfo.SupportAssistantConfigPopup.ErrorOnJsonParse=Requested JSON parse failed\r\n\r\n#YMSG: Error message when uncaught Error occurs\r\nTechInfo.SupportAssistantConfigPopup.UncaughtError=Uncaught Error\r\n\r\n#YMSG: Error message when request is aborted\r\nTechInfo.SupportAssistantConfigPopup.ErrorWhenAborted=Ajax request aborted\r\n\r\n#YMSG: Error message when default locations are not available\r\nTechInfo.SupportAssistantConfigPopup.NotAvailableAtTheMoment=This location is not available at the moment.\r\n\r\n#XFLD: Title for enabling Support Assistant to open in new window.\r\nTechInfo.SupportAssistantConfigPopup.OpenInNewWindow=Open Support Assistant in New Window\r\n\r\n#XFLD: Title for location section in support Assistant settings popover\r\nTechInfo.SupportAssistantConfigPopup.Locations=Resource Location\r\n\r\n#XFLD: Title for options section in support Assistant settings popover\r\nTechInfo.SupportAssistantConfigPopup.Options=Options\r\n\r\n#XTIT: Title for the debug modules configuration selection\r\nTechInfo.DebugModulesConfigPopup.SelectionCounter=Select Debug Modules ({0} Selected)\r\n\r\n#YMSG: sap-ui-debug mode custom value validation error message\r\nTechInfo.DebugModulesConfigPopup.ModeValidationMessage=Value for parameter sap-ui-debug is invalid\r\n\r\n#XTOL: Tooltip for copy to clipboard button\r\nTechInfo.DebugModulesCopy.Tooltip=Copy the sap-ui-debug value to clipboard\r\n\r\n#XTOL: Tooltip for copy to clipboard button\r\nTechInfo.DebugModulesReset.Tooltip=Reset the currently selected modules\r\n\r\n#YMSG: success message for copying to clipboard\r\nTechInfo.DebugModulesCopyToClipboard.Success=Custom sap-ui-debug value copied to clipboard\r\n\r\n#YMSG: error message for copying to clipboard\r\nTechInfo.DebugModulesCopyToClipboard.Error=Custom sap-ui-debug value could not be copied to clipboard\r\n\r\n#XTIT: Title for the debug modules configuration popup confirmation button\r\nTechInfo.DebugModulesConfigPopup.Confirm=Apply\r\n",
		"sap/ui/demo/iconexplorer/manifest.json": "{\n\t\"_version\": \"1.2.0\",\n\n\t\"name\": \"UI5 Icon Explorer PWA\",\n\t\"short_name\": \"Icon Explorer\",\n\t\"icons\": [\n\t\t\n\t\t{\n\t\t\t\"src\": \"icons/icon.svg\",\n\t\t\t\"sizes\": \"48x48 72x72 96x96 128x128 144x144 152x152 192x192 256x256 512x512\"\n\t\t},\n\n\t\t{\n\t\t\t\"src\": \"icons/icon-128x128.png\",\n\t\t\t\"sizes\": \"128x128\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"icons/icon-144x144.png\",\n\t\t\t\"sizes\": \"144x144\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"icons/icon-152x152.png\",\n\t\t\t\"sizes\": \"152x152\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"icons/icon-192x192.png\",\n\t\t\t\"sizes\": \"192x192\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"icons/icon-256x256.png\",\n\t\t\t\"sizes\": \"256x256\",\n\t\t\t\"type\": \"image/png\"\n\t\t},\n\t\t{\n\t\t\t\"src\": \"icons/icon-512x512.png\",\n\t\t\t\"sizes\": \"512x512\",\n\t\t\t\"type\": \"image/png\"\n\t\t}\n\t],\n\t\"start_url\": \"index.html\",\n\t\"display\": \"standalone\",\n\t\"background_color\": \"#FFFFFF\",\n\t\"theme_color\": \"#427CAC\",\n\n\t\"sap.app\": {\n\t\t\"_version\": \"1.2.0\",\n\t\t\"id\": \"sap.ui.demo.iconexplorer\",\n\t\t\"type\": \"application\",\n\t\t\"i18n\": \"i18n/i18n.properties\",\n\t\t\"title\": \"{{appTitle}}\",\n\t\t\"description\": \"{{appDescription}}\",\n\t\t\"applicationVersion\": {\n\t\t\t\"version\": \"1.0.0\"\n\t\t}\n\t},\n\n\t\"sap.ui\": {\n\t\t\"_version\": \"1.2.0\",\n\t\t\"technology\": \"UI5\",\n\t\t\"icons\": {\n\t\t\t\"icon\": \"sap-icon://image-viewer\",\n\t\t\t\"favIcon\": \"\",\n\t\t\t\"phone\": \"\",\n\t\t\t\"phone@2\": \"\",\n\t\t\t\"tablet\": \"\",\n\t\t\t\"tablet@2\": \"\"\n\t\t},\n\t\t\"deviceTypes\": {\n\t\t\t\"desktop\": true,\n\t\t\t\"tablet\": true,\n\t\t\t\"phone\": true\n\t\t},\n\t\t\"supportedThemes\": [\n\t\t\t\"sap_hcb\",\n\t\t\t\"sap_belize\"\n\t\t]\n\t},\n\n\t\"sap.ui5\": {\n\t\t\"_version\": \"1.2.0\",\n\t\t\"rootView\": {\n\t\t\t\"viewName\": \"sap.ui.demo.iconexplorer.view.App\",\n\t\t\t\"type\": \"XML\",\n\t\t\t\"id\": \"app\"\n\t\t},\n\n\t\t\"dependencies\": {\n\t\t\t\"minUI5Version\": \"1.36.0\",\n\t\t\t\"libs\": {\n\t\t\t\t\"sap.ui.core\": {\n\t\t\t\t\t\"minVersion\": \"1.36.0\"\n\t\t\t\t},\n\t\t\t\t\"sap.m\": {\n\t\t\t\t\t\"minVersion\": \"1.36.0\"\n\t\t\t\t},\n\t\t\t\t\"sap.ui.layout\" : {\n\t\t\t\t\t\"minVersion\": \"1.36.0\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t\"resources\": {\n\t\t\t\"css\": [\n\t\t\t\t{\n\t\t\t\t\t\"uri\": \"css/style.css\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\n\t\t\"contentDensities\": {\n\t\t\t\"compact\": true,\n\t\t\t\"cozy\": true\n\t\t},\n\n\t\t\"models\": {\n\t\t\t\"i18n\": {\n\t\t\t\t\"type\": \"sap.ui.model.resource.ResourceModel\",\n\t\t\t\t\"settings\": {\n\t\t\t\t\t\"bundleName\": \"sap.ui.demo.iconexplorer.i18n.i18n\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t\"routing\": {\n\t\t\t\"config\": {\n\t\t\t\t\"routerClass\": \"sap.m.routing.Router\",\n\t\t\t\t\"viewType\": \"XML\",\n\t\t\t\t\"viewPath\": \"sap.ui.demo.iconexplorer.view\",\n\t\t\t\t\"controlId\": \"app\",\n\t\t\t\t\"controlAggregation\": \"pages\",\n\t\t\t\t\"bypassed\": {\n\t\t\t\t\t\"target\": [\"notFound\"]\n\t\t\t\t},\n\t\t\t\t\"async\": true\n\t\t\t},\n\n\t\t\t\"routes\": [\n\t\t\t\t{\n\t\t\t\t\t\"pattern\": \":?query:\",\n\t\t\t\t\t\"name\": \"overview\",\n\t\t\t\t\t\"target\": [\"overview\"]\n\t\t\t\t}\n\t\t\t],\n\n\t\t\t\"targets\": {\n\t\t\t\t\"overview\": {\n\t\t\t\t\t\"viewName\": \"Overview\",\n\t\t\t\t\t\"viewId\": \"overview\",\n\t\t\t\t\t\"viewLevel\": 1\n\t\t\t\t},\n\t\t\t\t\"notFound\": {\n\t\t\t\t\t\"viewName\": \"NotFound\",\n\t\t\t\t\t\"viewId\": \"notFound\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
	}
});